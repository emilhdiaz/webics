{"ts":1361415896272,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * FireBug debug console logging.\n */\nfunction log(message) {\n    if(LOG == true) {\n\t\tconsole.log(message);\n\t}\t\n}\n\nvar processResponse = function(request, normalCallBack, normalMessage, dispatchEvent) {\n\tvar delay = 2000;\n\tvar dispatch = new Dispatch();\n\tbanner =  new Banner(); \n\tbanner.showClose('Close');\n\t\n//\tlog(request.response);\n\tresponse = request.response;\n\n\tswitch(request.status) {\n\tcase 'normal':\t\t\n\t\t/* Service Request Callbacks */\n\t\t$splat(normalCallBack).each( function( callback ) {\n\t\t\tif( $type(callback) == 'function') callback.attempt(request.response);\n\t\t\telse log('NOT A FUNCTION');\n\t\t});\n\t\t\n\t\t/* Notify the Dispatch */\n\t\tif( $defined(dispatchEvent) ) {\n//\t\t\tlog('Dispath: notifying dispatch of event: '+dispatchEvent);\n\t\t\tdispatch.notify(dispatchEvent, request.response);\n\t\t}\n\t\t\n\t\t/* Success Message Banner */\n\t\tif( $defined(normalMessage) ) {\n\t\t\tbanner.addClass('Normal');\n\t\t\tbanner.setHeader(normalMessage);\n\t\t\tbanner.reveal();\n\t\t\tbanner.nix.delay(delay);\n\t\t} else {\n\t\t\tbanner.nix(true);\n\t\t}\n\t\tbreak;\n\t\t\n\tcase 'warning':\n\t\tbanner.addClass('Warning');\n\t\tbanner.setHeader(request.response.message);\n\t\tbanner.reveal();\n\t\tbanner.nix.delay(delay);\n\t\tbreak;\n\t\t\n\tcase 'error':\n\t\tvar messages = '';\n\t\tbanner.addClass('Error');\n\t\trequest.response.each( function(message) {\n\t\t\tmessages = messages + message +' - ';\n\t\t});\n\t\tbanner.setHeader(messages);\n\t\tbanner.reveal();\n\t\tbanner.nix.delay(delay);\n\t\tbreak;\n\t\t\n\tcase 'exception':\n\t\tbanner.addClass('Error');\n\t\tbanner.setHeader(request.response.message);\n\t\tbanner.reveal();\n\t\tbanner.nix.delay(delay);\n\t\tbreak;\n\t\t\n\tcase 'authenticate':\n//\t\tnew Webics.Request(WS_ENDPOINT, 'authenticate', {AuthenticationScheme: 'HTTPBasic'});\n\t\tAPP.login();\n\t\tbanner.nix(true);\n\t\tbreak;\n\t}\n\t\n\treturn request.response;\n};\n\nArray.implement({\n\ttoHash : function() {\n\t\ti = 0;\n\t\tkeys = [];\n\t\tthis.each( function(item) {\n\t\t\tkeys[i] = i + 1;\n\t\t});\n\t\treturn this.associate(keys);\n\t}\n});\n\nElement.implement({\n\tinsert : function(el, where) {\n\t\tswitch($type(el)) {\n\t\t\tcase 'textnode':\n\t\t\tcase 'number':\n\t\t\tcase 'string':\n\t\t\t\tthis.appendText(el, where);\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'element':\n\t\t\tcase 'object':\n\t\t\t\tthis.grab($(el), where);\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'hash':\n\t\t\tcase 'array':\n\t\t\t\tel.each( function(_el) {\n\t\t\t\t\tthis.insert(_el, where);\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\treturn this;\n\t}\n});\n\n\n/*\n * Base Classes\n */\n\nvar Runnable = new Class({\n\trun: function() {}\n});\n\nvar ElementContext = new Class({\n\n\tBinds\t: true,\n\telement\t: null,\n\t\n\tinitialize: function( element ) {\n\t\tthis.element = element;\n\t},\n\t\n\ttoElement: function() {\n\t\treturn this.element;\n\t}\n});\n\n/**\n * Base Organizer Class\n */\nvar Organizer = new Class({\n\t\n\tExtends\t: ElementContext,\n\t\n\taddLine: function( key, items ) {},\n\t\n\tremoveLine: function( key ) {},\n\t\n\tclearLines: function() {},\n\t\n\treplaceLine: function( oldKey, newKey, items ) {}\n});\n\n/**\n * Text Class\n */\nvar Text = new Class({\n\t\n\tExtends\t: ElementContext,\n\t\n\tinitialize: function( text ) {\n\t\tthis.parent($defined(text) ? text : '');\n\t}\n});\n\n/**\n * Base SimpleElementContext Class\n * \n * The ElementContext class provide general methods to modify the \n * underlying element and its attributes while buffering it from \n * direct use in the rest of the application. \n * \n * General Getters/Setters\n * It supports the general getters and setters for the element's \n * styles, properties, classes, and events. \n * \n * Standard Attribute Getters/Setters\n * It supports the setting of WWWC standard element attributes \n * (dir, id, lang, and title). Additionally, it supports setting the\n * element's context name, which is used in CSS styles to provide more \n * fine-grained control over CSS selectors.\n * \n * Mootools toElement Hook\n * The toElement method is implemented to hook directly into the Mootools \n * framework and allow ElementContext objects to be used wherever Element \n * objects are expected. \n * \n * Object Lifespan Methods\n * It supports standard object lifespan methods to manage clones and \n * destroy the element. Additionally it supports some visual properties\n * such as the visibility of the element. \n * \n * Information\n * It supports the return of object information, such as whether the \n * element is equal to another element, is visible, its dimensions, \n * and its coordinates (optionally relative to another element).\n * \n * @param String\ttag\t\t- The HTML tag of the element object\n * @param Hash\t\toptions\t- Optional options to pass to the element object\n */\nvar SimpleElementContext = new Class({\n\t\n\tExtends\t: ElementContext,\n\tid\t\t: null,\n\ttag\t\t: null,\n\ttitle\t: null,\n\tcontext : null,\n\tlanguage: null,\n\tdirection: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( tag, options ) {\n\t\tif( $type(tag) != 'string' ) \n\t\t\tthrow TypeError(\"'tag' must be a string\");\n\t\tif( ($type(options) != false) && !(options instanceof Object) ) \n\t\t\tthrow TypeError(\"'options' must be an Object of properties\");\n\t\n\t\tthis.parent(new Element(tag, options));\n\t\tthis.setContext('SimpleElementContext');\n\t\tthis.tag = tag;\n\t},\n\t\n\t/**\n\t * To native Element\n\t */\n\ttoElement: function() {\n\t\treturn this.element;\n\t},\n\t\n\t/**\n\t * Get Styles\n\t */\n\tgetStyle: function( style  ) {\n\t\treturn this.element.getStyle(style);\n\t},\n\t\n\tgetStyles: function( styles ) {\n\t\treturn this.element.getStyles.run(styles, this);\n\t},\t\n\t\n\t/**\n\t * Set Styles\n\t */\n\tsetStyle: function( style, value  ) {\n\t\tthis.element.setStyle(style, value);\n\t\treturn this;\n\t},\n\t\n\tsetStyles: function( styles  ) {\n\t\tthis.element.setStyles(styles);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Remove Styles\n\t */\n\tremoveStyle: function( style ) {\n\t\tthis.element.setStyle(style, null);\n\t\treturn this;\n\t},\n\t\n\tremoveStyles: function( styles ) {\n\t\t$each(styles, function(style) { this.removeStyle(style); }, this);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Get Properties \n\t */\n\tgetProperty: function( property ) {\n\t\treturn this.element.getProperty(property);\n\t},\n\t\n\tgetProperties: function( properties ) {\n\t\treturn this.element.getProperties.run(properties, this);\n\t},\t\n\t\n\t/**\n\t * Set Properties\n\t */\n\tsetProperty: function( property, value  ) {\n\t\tthis.element.setProperty(property, value);\n\t\treturn this;\n\t},\n\t\n\tsetProperties: function( properties  ) {\n\t\tthis.element.setProperties(properties);\n\t\treturn this;\n\t},\t\n\t\n\t/**\n\t * Remove Properties\n\t */\n\tremoveProperty: function( property ) {\n\t\tthis.element.setProperty(property, null);\n\t\treturn this;\n\t},\n\t\n\tremoveProperties: function( properties ) {\n\t\t$each(properties, function(property) { this.removeProperty(property); }, this);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Add/Remove/Replace Classes\n\t */\n\taddClass: function( className ) {\n\t\tthis.element.addClass(className);\n\t\treturn this;\n\t},\n\t\n\taddClasses: function( classNames ) {\n\t\t$each(classNames, function(className) { this.addClass(className); }, this);\n\t\treturn this;\n\t},\n\t\n\tremoveClass: function( className ) {\n\t\tthis.element.removeClass(className);\n\t\treturn this;\n\t},\t\n\t\n\tremoveClasses: function( classNames ) {\n\t\t$each(classNames, function(className) { this.removeClass(className); }, this);\n\t\treturn this;\n\t},\n\t\n\ttoggleClass: function( className ) {\n\t\tthis.element.toggleClass(className);\n\t\treturn this;\n\t},\t\n\t\n\treplaceClass: function( oldClassName, newClassName ) {\n\t\tthis.element.swapClass(oldClassName, newClassName);\n\t\treturn this;\n\t},\n\t\n\tclearClasses: function() {\n\t\treturn this.removeProperty('class');\n\t},\n\t\n\t/**\n\t * Set Events\n\t */\n\taddEvent: function( type, fn ) {\n\t\tthis.element.addEvent(type, fn);\n\t\treturn this;\n\t},\n\t\n\taddEvents: function( events ) {\n\t\tthis.element.addEvents(events);\n\t\treturn this;\n\t},\n\t\n\tremoveEvent: function( type, fn ) {\n\t\tthis.element.removeEvent(type, fn);\n\t\treturn this;\n\t},\t\n\t\n\tremoveEvents: function( events ) {\n\t\tthis.element.removeEvents(events);\n\t\treturn this;\n\t},\n\t\n\tfireEvent: function( type, args, delay ) {\n\t\tthis.element.fireEvent(type, args, delay);\n\t\treturn this;\n\t},\t\n\t\n\tclearEvents: function( type ) {\n\t\treturn this.removeEvents(type);\n\t},\n\t\n\t/** \n\t * Set Standard Attributes\n\t */\n\tsetID: function( id ) {\n\t\tthis.id = id;\n\t\treturn this.setProperty('id', id);\n\t},\n\t\n\tsetTitle: function( title ) {\n\t\tthis.title = title;\n\t\treturn this.setProperty('title', title);\n\t},\n\t\n\tsetDirection: function( direction ) {\n\t\tthis.direction = direction;\n\t\treturn this.setProperty('dir', direction);\n\t},\n\t\n\tsetLanguage: function( language ) {\n\t\tthis.language = language;\n\t\treturn this.setProperty('lang', language);\n\t},\n\t\n\tsetContext: function( context ) {\n\t\tthis.context = context;\n\t\treturn this.setProperty('context', context);\n\t},\n\n\t/**\n\t * Manage Lifespan \n\t */\n\treplaces: function( element ) {\n\t\tthis.element.replaces(element);\n\t\treturn this;\n\t},\n\t\n\tclone: function( contents, keepid ) {\n\t\treturn $merge(this, {element:this.element.clone(contents, keepid)});\n\t},\n\t\n\tdispose: function() {\n\t\tthis.element.dispose();\n\t\treturn this;\n\t},\n\t\n\tdestroy: function() {\n\t\tthis.element.destroy();\n\t\treturn this;\n\t},\n\t\n\thide: function() {\n\t\tthis.element.hide();\n\t\treturn this;\n\t},\n\t\n\tshow: function() {\n\t\tthis.element.show();\n\t\treturn this;\n\t},\n\t\n\ttoggle: function() {\n\t\tthis.element.toggle();\n\t\treturn this;\n\t},\n\t\n\tposition: function( options ) {\n\t\tthis.element.position(options);\n\t\treturn this;\n\t},\n\t\n\tcenter: function() {\n\t\tthis.element.position();\n\t\treturn this;\n\t},\n\t\n\tfade: function( mask ) {\n\t\tthis.element.fade(mask);\n\t\treturn this;\n\t},\n\t\n\tmove: function( options ) {\n\t\tthis.element.move(options);\n\t\treturn this;\n\t},\n\t\n\tcentralize: function() {\n\t\tthis.element.move();\n\t\treturn this;\n\t},\n\t\t\n\tdraggable: function( handle ) {\n\t\tthis.element.makeDraggable({handle: $defined(handle) ? $(handle) : this.element});\n\t\treturn this;\n\t},\n\t\n\treveal: function( options ) {\n\t\tthis.element.reveal(options);\n\t\treturn this;\n\t},\n\t\n\tdissolve: function() {\n\t\tthis.element.dissolve();\n\t\treturn this;\n\t},\n\t\n\tnix: function( destroy ) {\n\t\tthis.element.nix();\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Information \n\t */\n\tisEqual: function( element ) {\n\t\treturn !!(this.element === $(element));\n\t},\n\t\n\tisA: function( object ) {\n\t\treturn !!this.element.match(tag);\n\t},\n\t\n\tisDisplayed: function() {\n\t\treturn !!this.element.isDisplayed();\n\t},\n\t\n\tgetDimensions: function() {\n\t\treturn this.element.getDimensions();\n\t}, \n\t\n\tgetCoordinates: function( relative ) {\n\t\treturn this.element.getCoordinates($(relative));\n\t}\n\t\n});\n\n/**\n * Base TextElementContext Class\n */\nvar TextElementContext = new Class({\n\t\n\tExtends\t: SimpleElementContext,\n\ttext\t: null,\n\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( tag, options ) {\n\t\tthis.parent(tag, options);\n\t\tthis.setContext('CompositeElementContext');\n\t\tthis.text = '';\n\t},\n\t\n\t/**\n\t * Add/Remove/Replace Text\n\t */\n\taddText: function( text ) {\n\t\tthis.text += text;\n\t\tthis.element.appendText(text);\n\t\treturn this;\n\t},\n\t\n\tremoveText: function() {\n\t\tthis.text = '';\n\t\treturn this.removeProperty('text');\n\t},\n\n\tsetText: function( text ) {\n\t\tthis.text = text;\n\t\treturn this.setProperty('text', text);\n\t}\n});\n\n/**\n * Base CompositeElementContext\n * \n * The CompositeElementContext provides methods to manage the lifespan \n * of the compositions of root element. This base class is intended to\n * be used with HTML Elements such as <table>, <form>, <img>, etc...\n * \n * Elements Get/Add/Remove/Replace Methods\n * It provides methods to add, \n * get (search), remove, and replace child elements.\n * \n * Conviniece Methods\n * It also provides a few convinience methods such as insert, wrap, and \n * empty to faciliate the the user.\n * \n * Information\n * It extends the support for information that is provided by \n * ElementContext by providing information about the child elements\n * that it has.\n *  \n * @param String\ttag\t\t- The HTML tag of the element object\n * @param Hash\t\toptions\t- Optional options to pass to the element object\n */\nvar CompositeElementContext = new Class({\n\t\n\tExtends\t: SimpleElementContext,\n\telements: null,\n\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( tag, options ) {\n\t\tthis.parent(tag, options);\n\t\tthis.setContext('CompositeElementContext');\n\t\tthis.elements = new Array();\n\t},\n\t\n\t/**\n\t * Find Elements\n\t */\n\tfindElement: function( tag ) {\n\t\treturn this.element.getElement(tag);\n\t},\n\t\n\tfindElements: function( tag ) {\n\t\treturn this.element.getElements(tag);\n\t},\n\t\n\t/**\n\t * Add Elements\n\t */\n\taddElement: function( element, where ) {\n\t\tif( !(element instanceof Element) && !(element instanceof ElementContext) ) {\n\t\t\tthrow TypeError(\"'element' must be an instance of Element or ElementContext\");\n\t\t}\n\t\tif( !['string', false].contains($type(where)) ) \n\t\t\tthrow TypeError(\"'where' must be a string\");\n\n\t\tthis.element.insert($(element), where);\n\t\tthis.elements.include(element);\n\t\treturn this;\n\t},\n\t\n\taddElements: function ( elements, where ) {\n\t\tif( !(elements instanceof Array) ) \n\t\t\tthrow TypeError(\"'elements' must be an Array of Element or ElementContext instances\");\n\t\t\n\t\t$each(elements, function(element) { this.addElement(element, where); }, this);\n\t\treturn this;\n\t},\n\t\n\twrapElement: function( element, where ) {\n\t\tif( !(element instanceof Element) && !(element instanceof ElementContext) ) \n\t\t\tthrow TypeError(\"'element' must be an instance of Element or ElementContext\");\n\t\tif( !['string', false].contains($type(where)) ) \n\t\t\tthrow TypeError(\"'where' must be a string\");\n\t\t\n\t\tthis.element.wraps($(element), where);\n\t\tthis.elements.include(element);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Remove Elements\n\t */\n\tremoveElement: function ( element ) {\n\t\tif ( !this.hasElement(element) ) throw ReferenceError;\n\t\t\n\t\t$(element).dispose();\n\t\tthis.elements.erase(element);\n\t\treturn this;\n\t},\n\t\n\tremoveElements: function( elements ) {\n\t\t$each(elements, function(element) { this.removeElement(element); }, this);\n\t\treturn this;\n\t},\n\n\tclearElements: function() {\n\t\tthis.element.empty();\n\t\tthis.elements.empty();\n\t\treturn this;\n\t},\n\t\n\tdisposeElements: function() {\n\t\t$each(this.elements, function(element) { $(element).dispose(); }, this);\n\t\tthis.elements.empty();\n\t\treturn this;\n\t},\n\n\t/**\n\t * Replace Elements\n\t */\n\treplaceElement: function( oldElement, newElement ) {\n\t\tif ( !this.hasElement(oldElement) ) throw ReferenceError;\n\t\t\n\t\t$(newElement).replaces($(oldElement));\n\t\tthis.elements[this.elements.indexOf(oldElement)] = newElement;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Information\n\t */\n\tisEmpty: function() {\n\t\treturn !!((this.element.getChildren().length == 0) && (this.element.get('text').length == 0));\n\t},\n\t\n\thasElement: function( element ) {\n\t\treturn !!this.element.hasChild($(element));\n\t}\n\t\n});\n\n/**\n * Base ComplexElementContext\n * \n * The ComplexElementContect provides methods to manage the lifespan \n * of the compositions of root element. This base class is intended to \n * be used with built-up HTML composite forms. \n * \n * @param String\ttag\t\t- The HTML tag of the element object\n * @param Hash\t\toptions\t- Optional options to pass to the element object\n */\nvar ComplexElementContext = new Class({\n\t\n\tExtends\t: CompositeElementContext,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( tag, options ) {\n\t\tthis.parent(tag, options);\n\t\tthis.setContext('ComplexElementContext');\n\t}\n});\n\n/**\n * Dispatch Class\n */\nvar Dispatch = new Class({\n\t\n\tBinds\t\t: true,\n\tSingleton\t: true,\n\tobservers\t: null,\n\tpersistent\t: null,\n\t\n\tinitialize: function() {\n\t\tthis.observers = new Hash();\n\t\tthis.persistent = new Array();\n\t},\n\t\t\n\tnotify: function( service, value, persist ) {\n\t\tif( $type(service) != 'string')\n\t\t\tthrow TypeError(\"'service' must be a string\");\n\t\tif( !this.observers.has(service) ) {\n//\t\t\tlog(\"no subscribers of service: '\"+service+\"'\");\n\t\t\treturn this;\n\t\t}\n\n//\t\tlog(\"notifying subscribers of services: '\"+service+\"'\");\n\t\t\n\t\tthis.observers.get(service).each( function(observer) {\t\n\t\t\tobserver.run(value);\n\t\t\tif( this.persistent.contains(observer) == false ) {\n\t\t\t\tthis.observers.get(service).erase(observer);\n\t\t\t}\n\t\t}.bind(this));\n\t\treturn this;\n\t},\n\t\n\tsubscribe: function( service, observer, persist ) {\n\t\tif( $type(service) != 'string')\n\t\t\tthrow TypeError(\"'name' must be a string\");\n\t\tif( $type(observer) != 'function')\n\t\t\tthrow TypeError(\"'observer' must be a function\");\n\t\tif( !this.observers.has(service) )\n\t\t\tthis.observers.set(service, new Array());\n\n//\t\tlog(\"subscribing observer to service: '\"+service+\"'\");\n\t\t\n\t\tthis.observers.get(service).include(observer);\n\t\t\n\t\tif( persist = true ) this.persistent.include(observer);\n\t\t\n\t\treturn this;\n\t}\n}); \n\n/**\n * Goto Class\n */\nvar Goto = new Class({\n\t\n\tExtends\t: Runnable, \n\turi\t\t: null,\n\t\n\tinitialize: function( uri, data ) {\n\t\tthis.uri = new URI(uri).setData(data);\n\t},\n\t\n\trun: function() {\n\t\tlog(this);\n\t\tthis.uri.go();\n\t}\n});\n\n/**\n * Button Class\n */\nvar Button = new Class({\n\t\n\tExtends\t: CompositeElementContext,\n\tname\t: null,\n\ttype\t: null,\n\tvalue\t: null,\n\tdisabled: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( action, options ) {\n\t\tthis.parent('button', options);\n\t\tthis.setContext('Button');\n\t\tthis.setAction(action);\n\t},\n\t\n\tsetAction: function( action ) {\n\t\tif( ($type(action) != 'function') && !(action instanceof Runnable ) )\n\t\t\tthrow TypeError(\"'action' must be a function\");\n\t\t\n\t\tthis.action = action;\n\t\tthis.clearEvents('click');\n\t\tthis.addEvent('click', (action instanceof Runnable ) ? action.run.bind(action) : action.pass(this) );\n\t\treturn this;\n\t},\n\t\n\tsetName: function( name ) {\n\t\tif( $type(name) != 'string' ) \n\t\t\tthrow TypeError(\"'name' must be a string\");\n\t\t\n\t\tthis.name = name;\n\t\treturn this.setProperty('name', name);\n\t},\n\t\n\tsetType: function( type ) {\n\t\tif( $type(type) != 'string' ) \n\t\t\tthrow TypeError(\"'type' must be a string\");\n\t\t\n\t\tthis.type = type;\n\t\treturn this.setProperty('type', type);\n\t},\n\t\n\tsetValue: function( value ) {\n\t\tif( !['string', false].contains($type(value)) ) \n\t\t\tthrow TypeError(\"'value' must be a string\");\n\t\t\n\t\tthis.value = value;\n\t\treturn this.setProperty('value', value);\n\t},\n\t\n\tsetDisabled: function( disabled ) {\n\t\tif( $type(disabled) != 'boolean' ) \n\t\t\tthrow TypeError(\"'disabled' must be a boolean\");\n\t\t\n\t\tthis.disabled = disabled;\n\t\treturn this.setProperty('disabled', disabled);\n\t}\n});\n\nvar Actionable = new Class({\n\t\n\tExtends\t\t: Button,\n\talternate\t: null,\n\t\n\tinitialize: function( action, options ) {\n\t\tthis.parent(action, options);\n\t\tthis.setContext('Actionable');\n\t},\n\t\n\tsetAlternate: function( alternate ) {\n\t\tif( alternate.func ) { \n\t\t\tthis.setAction(alternate.func);\n\t\t}\n\t\tif( alternate.content ) {\n\t\t\tthis.clearElements();\n\t\t\tthis.addElement(alternate.content);\n\t\t}\n\t\treturn this;\n\t}\n});\n\n/**\n * Image Class\n */\nvar Image = new Class({\n\t\n\tExtends\t: SimpleElementContext, \n\talt\t\t: null,\n\tsrc\t\t: null,\n\theight\t: null, \n\twidth\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function(alt, src, options) {\n\t\tthis.parent('img', options);\n\t\tthis.setContext('Image');\n\t\tthis.setAlt(alt);\n\t\tthis.setSrc(src);\n\t},\n\t\n\tsetAlt: function( alt ) {\n\t\tif( $type(alt) != 'string' ) \n\t\t\tthrow TypeError(\"'alt' must be a string\");\n\t\t\n\t\tthis.alt = alt;\n\t\treturn this.setProperty('alt', alt);\n\t},\n\t\n\tsetSrc: function( src ) {\n\t\tif( $type(src) != 'string' ) \n\t\t\tthrow TypeError(\"'src' must be a string\");\n\t\t\n\t\tthis.src = src;\n\t\treturn this.setProperty('src', src);\n\t},\n\t\n\tsetHeight: function( height ) {\n\t\tif( !['string', 'number'].contains($type(height)) )\n\t\t\tthrow TypeError(\"'height' must be a string or number\");\n\t\t\n\t\tthis.height = height;\n\t\treturn this.setProperty('height', height);\n\t},\n\t\n\tsetWidth: function( width ) {\n\t\tif( !['string', 'number'].contains($type(width)) )\n\t\t\tthrow TypeError(\"'width' must be a string or number\");\n\t\t\n\t\tthis.width = width;\n\t\treturn this.setProperty('width', width);\n\t},\n\t\n\tsetSize: function (height, width) {\n\t\tthis.setHeight(height);\n\t\tthis.setWidth(width);\n\t\t\n\t\treturn this;\n\t}\n});\n\n/**\n * Span Class\n */\nvar Span = new Class({\n\t\n\tExtends\t: TextElementContext, \n\t\n\tinitialize: function( options ) {\n\t\tthis.parent('span', options);\n\t\tthis.setContext('Span');\n\t}\n});\n\n/**\n * A Class\n */\nvar A = new Class({\n\t\n\tExtends\t: TextElementContext, \n\thref\t: null,\n\t\n\tinitialize: function( href, options ) {\n\t\tthis.parent('a', options);\n\t\tthis.setContext('A');\n\t\tthis.setHref(href);\n\t},\n\t\n\tsetHref: function( href ) {\n\t\tthis.href = href;\n\t\treturn this.setProperty('href', href);\n\t}\n});\n\n/**\n * Div Class\n */\nvar Div = new Class({\n\t\n\tExtends : CompositeElementContext, \n\t\n\tinitialize: function( options ) {\n\t\tthis.parent('div', options);\n\t\tthis.setContext('Div');\n\t}\n});\n\n/**\n * Clear Class\n */\nvar Clear = new Class({\n\n\tExtends\t: SimpleElementContext,\n\t\n\tinitialize: function( options ) {\n\t\tthis.parent('div', options);\n\t\tthis.setContext('Clear');\n\t\tthis.setStyle('clear', 'both');\n\t}\n});\n\n/**\n * Table Class\n */\nvar Table = new Class({\n\t\n\tExtends\t: CompositeElementContext,\n\twidth\t: null,\n\tborder\t: null,\n\tcellpadding: null, \n\tcellspacing: null, \n\tcaption\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('table', options);\n\t\tthis.setContext('Table');\n\t\tthis.caption = new Table.Caption();\n\t},\n\t\n\tsetCaption: function( caption ) {\n\t\tif( !this.hasElement(this.caption) )\n\t\t\tthis.element.insert(this.caption, 'top');\n\t\t\n\t\tthis.caption.setText(caption);\n\t},\n\t\n\tsetWidth: function( width ) {\n\t\tif( $type(width) != 'number' ) \n\t\t\tthrow TypeError(\"'width' must be a number\");\n\t\t\n\t\tthis.width = width;\n\t\treturn this.setProperty('width', width);\n\t},\n\t\n\tsetCellpadding: function( cellpadding ) {\n\t\tif( $type(cellpadding) != 'number' ) \n\t\t\tthrow TypeError(\"'cellpadding' must be a number\");\n\t\t\n\t\tthis.cellpadding = cellpadding;\n\t\treturn this.setProperty('cellpadding', cellpadding);\n\t},\n\t\n\tsetCellspacing: function( cellspacing ) {\n\t\tif( $type(cellspacing) != 'number' ) \n\t\t\tthrow TypeError(\"'cellspacing' must be a number\");\n\t\t\n\t\tthis.cellspacing = cellspacing;\n\t\treturn this.setProperty('cellspacing', cellspacing);\n\t},\n\t\n\taddElement: function( section, where ) {\n\t\tif( !(section instanceof Table.Section) ) \n\t\t\tthrow TypeError(\"'section' must be an instance of Table.Section\");\n\t\t\n\t\treturn this.parent(section, where);\n\t},\n\t\n\twrapElement: function( section, where ) {\n\t\tif( !(section instanceof Table.Section) ) \n\t\t\tthrow TypeError(\"'section' must be an instance of Table.Section\");\n\t\t\n\t\treturn this.parent(section, where);\n\t},\n\t\n\treplaceElement: function( oldSection, newSection ) {\n\t\tif( !(oldSection instanceof Table.Section) ) \n\t\t\tthrow TypeError(\"'oldSection' must be an instance of Table.Section\");\n\t\tif( !(newSection instanceof Table.Section) ) \n\t\t\tthrow TypeError(\"'newSection' must be an instance of Table.Section\");\n\t\t\n\t\treturn this.parent(oldSection, newSection);\n\t}\n});\n\n/**\n * TableSection Class\n */\nvar TableSection = new Class({\n\t\n\tExtends\t: CompositeElementContext, \n\talign\t: null,\n\tvalign\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( tag, options ) {\n\t\tthis.parent(tag, options);\n\t\tthis.setContext('Table.Section');\n\t},\n\t\n\tsetAlign: function( align ) {\n\t\tif( $type(align) != 'string' ) \n\t\t\tthrow TypeError(\"'align' must be a string\");\n\t\t\n\t\tthis.align = align;\n\t\treturn this.setProperty('align', align);\n\t},\n\t\n\tsetValign: function( valign ) {\n\t\tif( $type(valign) != 'string' ) \n\t\t\tthrow TypeError(\"'valign' must be a string\");\n\t\t\n\t\tthis.valign = valign;\n\t\treturn this.setProperty('valign', valign);\n\t},\n\t\n\taddElement: function( row, where ) {\n\t\tif( !(row instanceof Table.Tr) ) \n\t\t\tthrow TypeError(\"'row' must be an instance of Table.Tr\");\n\t\t\n\t\treturn this.parent(row, where);\n\t},\n\t\n\twrapElement: function( row, where ) {\n\t\tif( !(row instanceof Table.Tr) ) \n\t\t\tthrow TypeError(\"'row' must be an instance of Table.Tr\");\n\t\t\n\t\treturn this.parent(row, where);\n\t},\n\t\n\treplaceElement: function( oldRow, newRow ) {\n\t\tif( !(oldRow instanceof Table.Tr) ) \n\t\t\tthrow TypeError(\"'oldRow' must be an instance of Table.Tr\");\n\t\tif( !(newRow instanceof Table.Tr) ) \n\t\t\tthrow TypeError(\"'newRow' must be an instance of Table.Tr\");\n\t\t\n\t\treturn this.parent(oldRow, newRow);\n\t}\n});\nTable.Section = TableSection;\n\n/**\n * TableCell Class\n */\nvar TableCell = new Class({\n\t\n\tExtends\t: CompositeElementContext,\n\talign\t: null,\n\tvalign\t: null,\n\tcolspan\t: null, \n\trowspan\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( tag, options ) {\n\t\tthis.parent(tag, options);\n\t\tthis.setContext('Table.Cell');\n\t},\n\t\n\tsetAlign: function( align ) {\n\t\tif( $type(align) != 'string' ) \n\t\t\tthrow TypeError(\"'align' must be a string\");\n\t\t\n\t\tthis.align = align;\n\t\treturn this.setProperty('align', align);\n\t},\n\t\n\tsetValign: function( valign ) {\n\t\tif( $type(valign) != 'string' ) \n\t\t\tthrow TypeError(\"'valign' must be a string\");\n\t\t\n\t\tthis.valign = valign;\n\t\treturn this.setProperty('valign', valign);\n\t},\n\t\n\tsetColspan: function( colspan ) {\n\t\tif( $type(colspan) != 'number' ) \n\t\t\tthrow TypeError(\"'colspan' must be a number\");\n\t\t\n\t\tthis.colspan = colspan;\n\t\treturn this.setProperty('colspan', colspan);\n\t},\n\t\n\tsetRowspan: function( rowspan ) {\n\t\tif( $type(rowspan) != 'number' ) \n\t\t\tthrow TypeError(\"'rowspan' must be a number\");\n\t\t\n\t\tthis.rowspan = rowspan;\n\t\treturn this.setProperty('rowspan', rowspan);\n\t}\n});\nTable.Cell = TableCell;\n\n/**\n * TableThead Class\n */\nvar TableThead = new Class({\n\t\n\tExtends\t: Table.Section,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('thead', options);\n\t\tthis.setContext('Table.Thead');\n\t}\n});\nTable.Thead = TableThead;\n\n/**\n * TableTbody Class\n */\nvar TableTbody = new Class({\n\t\n\tExtends\t: Table.Section,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('tbody', options);\n\t\tthis.setContext('Table.Tbody');\n\t}\n});\nTable.Tbody = TableTbody;\n\n/**\n * TableTfoot Class\n */\nvar TableTfoot = new Class({\n\t\n\tExtends\t: Table.Section,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('tfoot', options);\n\t\tthis.setContext('Table.Tfoot');\n\t}\n});\nTable.Tfoot = TableTfoot;\n\n/**\n * TableTr Class\n */\nvar TableTr = new Class({\n\t\n\tExtends\t: CompositeElementContext,\n\talign\t: null,\n\tvalign\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('tr', options);\n\t\tthis.setContext('Table.Tr');\n\t},\n\t\n\tsetAlign: function( align ) {\n\t\tif( $type(align) != 'string' ) \n\t\t\tthrow TypeError(\"'align' must be a number\");\n\t\t\n\t\tthis.align = align;\n\t\treturn this.setProperty('align', align);\n\t},\n\t\n\tsetValign: function( valign ) {\n\t\tif( $type(valign) != 'string' ) \n\t\t\tthrow TypeError(\"'valign' must be a number\");\n\t\t\n\t\tthis.valign = valign;\n\t\treturn this.setProperty('valign', valign);\n\t},\n\t\n\taddElement: function( cell, where ) {\n\t\tif( !(cell instanceof Table.Cell) ) \n\t\t\tthrow TypeError(\"'cell' must be an instance of Table.Cell\");\n\t\t\n\t\treturn this.parent(cell, where);\n\t},\n\t\n\twrapElement: function( cell, where ) {\n\t\tif( !(cell instanceof Table.Cell) ) \n\t\t\tthrow TypeError(\"'cell' must be an instance of Table.Cell\");\n\t\t\n\t\treturn this.parent(cell, where);\n\t},\n\t\n\treplaceElement: function( oldCell, newCell ) {\n\t\tif( !(oldCell instanceof Table.Cell) ) \n\t\t\tthrow TypeError(\"'oldCell' must be an instance of Table.Cell\");\n\t\tif( !(newCell instanceof Table.Cell) ) \n\t\t\tthrow TypeError(\"'newCell' must be an instance of Table.Cell\");\n\t\t\n\t\treturn this.parent(oldCell, newCell);\n\t}\n});\nTable.Tr = TableTr;\n\n/**\n * TableTh Class\n */\nvar TableTh = new Class({\n\t\n\tExtends\t: Table.Cell,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('th', options);\n\t\tthis.setContext('Table.Th');\n\t}\n});\nTable.Th = TableTh;\n\n/**\n * TableTd Class\n */\nvar TableTd = new Class({\n\t\n\tExtends\t: Table.Cell,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('td', options);\n\t\tthis.setContext('Table.Td');\n\t}\n});\nTable.Td = TableTd;\n\n/**\n * TableCaption Class\n */\nvar TableCaption = new Class({\n\t\n\tExtends\t: TextElementContext,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('caption', options);\n\t\tthis.setContext('Table.Caption');\n\t}\n});\nTable.Caption = TableCaption;\n\n\n/**\n * Form Class\n */\nvar Form = new Class({\n\t\n\tExtends\t: CompositeElementContext, \n\tname\t: null,\n\taction\t: null,\n\tmethod\t: null, \n\tcharset\t: null, \n\tenctype\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( action, options ) {\n\t\tthis.parent('form', options);\n\t\tthis.setContext('Form');\n\t\tthis.setAction(action);\n\t},\n\t\n\tsetName: function( name ) {\n\t\tif( $type(name) != 'string' ) \n\t\t\tthrow TypeError(\"'name' must be a string\");\n\t\t\n\t\tthis.name = name;\n\t\treturn this.setProperty('name', name);\n\t},\n\t\n\tsetAction: function( action ) {\n\t\tif( $type(action) != 'string' ) \n\t\t\tthrow TypeError(\"'action' must be a string\");\n\t\t\n\t\tthis.action = action; \n\t\treturn this.setProperty('action', action);\n\t},\n\t\n\tsetMethod: function( method ) {\n\t\tif( $type(method) != 'string' ) \n\t\t\tthrow TypeError(\"'method' must be a string\");\n\t\t\n\t\tthis.method = method;\n\t\treturn this.setProperty('method', method);\n\t},\n\t\n\tsetCharset: function( charset ) {\n\t\tif( $type(charset) != 'string' ) \n\t\t\tthrow TypeError(\"'charset' must be a string\");\n\t\t\n\t\tthis.charset = charset;\n\t\treturn this.setProperty('accept-charset', charset);\n\t},\n\t\n\tsetEnctype: function( enctype ) {\n\t\tif( $type(enctype) != 'string' ) \n\t\t\tthrow TypeError(\"'enctype' must be a string\");\n\t\t\n\t\tthis.enctype = enctype;\n\t\treturn this.setProperty('enctype', enctype);\n\t},\n\t\n\tasynchronous: function( options ) {\n\t\tif( ($type(options) != false) && !(options instanceof Object) ) \n\t\t\tthrow TypeError(\"'options' must be an Object of properties\");\n\n\t\tthis.element.set('send', options);\n\t\tthis.clearEvents('submit');\n\t\tthis.addEvent('submit', function(e) {\n\t\t\tif(e) e.stop();\n\t\t\tthis.send();\n\t\t}.bind(this));\n\t\treturn this;\n\t},\n\t\n\tsynchronous: function() {\n\t\tthis.clearEvents('submit');\n\t\tthis.addEvent('submit', function(e) {\n\t\t\tif(e) e.stop();\n\t\t\tthis.submit();\n\t\t});\n\t\treturn this;\n\t},\n\t\n\tsubmit: function() {\n\t\tthis.fireEvent('submit');\n\t\treturn this;\n\t},\n\t\n\tpost: function() {\n\t\tthis.synchronous();\n\t\tthis.setMethod('post');\n\t\tthis.submit();\n\t\treturn this;\n\t},\n\t\n\tget: function() {\n\t\tthis.synchronous();\n\t\tthis.setMethod('get');\n\t\tthis.submit();\n\t\treturn this;\n\t},\n\t\n\tsend: function( queue ) {\n\t\tif( ($type(queue) != false) && !(queue instanceof Webics.Queue) ) \n\t\t\tthrow TypeError(\"'queue' must be an instance of Queue\");\n\n\t\tif(queue) {\n\t\t\tqueue.dispatch(this.element.get('send'));\n\t\t} else {\n\t\t\tthis.element.send();\n\t\t}\n\t\treturn this;\n\t}\n});\n\n/**\n * FormSimpleInput Class\n */\nvar FormSimpleInput = new Class({\n\t\n\tExtends\t: SimpleElementContext,\n\tname\t: null,\n\ttype\t: null,\n\tsize\t: null,\n\tvalue\t: null,\n\tdisabled: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( tag, type, name, options ) {\n\t\tthis.parent(tag, options);\n\t\tthis.setContext('Form.SimpleInput');\n\t\tthis.setName(name);\n\t\tthis.setType(type);\n\t},\n\t\n\tsetName: function( name ) {\n\t\tif( $type(name) != 'string' ) \n\t\t\tthrow TypeError(\"'name' must be a string\");\n\t\t\n\t\tthis.name = name;\n\t\treturn this.setProperty('name', name);\n\t},\n\t\n\tsetType: function( type ) {\n\t\tif( $type(type) != 'string' ) \n\t\t\tthrow TypeError(\"'type' must be a string\");\n\t\t\n\t\tthis.type = type;\n\t\treturn this.setProperty('type', type);\n\t},\n\t\n\tsetSize: function( size ) {\n\t\tif( $type(size) != 'number' ) \n\t\t\tthrow TypeError(\"'size' must be a number\");\n\t\t\n\t\tthis.size = size;\n\t\treturn this.setProperty('size', size);\n\t},\n\n\tsetValue: function( value ) {\n\t\tif( !['string', 'number', false].contains($type(value)) ) \n\t\t\tthrow TypeError(\"'value' must be a string\");\n\t\t\n\t\tthis.value = value;\n\t\treturn this.setProperty('value', value);\n\t},\n\t\n\tsetDisabled: function( disabled ) {\n\t\tif( $type(disabled) != 'boolean' ) \n\t\t\tthrow TypeError(\"'disabled' must be a boolean\");\n\t\t\n\t\tthis.disabled = disabled;\n\t\treturn this.setProperty('disabled', disabled);\n\t}\n});\nForm.SimpleInput = FormSimpleInput;\n\n/**\n * FormCompositeInput Class\n */\nvar FormCompositeInput = new Class({\n\t\n\tExtends\t: CompositeElementContext,\n\tname\t: null,\n\tsize\t: null,\n\tvalue\t: null,\n\tdisabled: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( tag, name, options ) {\n\t\tthis.parent(tag, options);\n\t\tthis.setContext('Form.SimpleInput');\n\t\tthis.setName(name);\n\t},\n\t\n\tsetName: function( name ) {\n\t\tif( $type(name) != 'string' ) \n\t\t\tthrow TypeError(\"'name' must be a string\");\n\t\t\n\t\tthis.name = name;\n\t\treturn this.setProperty('name', name);\n\t},\n\t\n\tsetSize: function( size ) {\n\t\tif( $type(size) != 'number' ) \n\t\t\tthrow TypeError(\"'size' must be a number\");\n\t\t\n\t\tthis.size = size;\n\t\treturn this.setProperty('size', size);\n\t},\n\n\tsetValue: function( value ) {\n\t\tif( !['string', 'number', false].contains($type(value)) ) \n\t\t\tthrow TypeError(\"'value' must be a string\");\n\t\t\n\t\tthis.value = value;\n\t\treturn this.setProperty('value', value);\n\t},\n\t\n\tsetDisabled: function( disabled ) {\n\t\tif( $type(disabled) != 'boolean' ) \n\t\t\tthrow TypeError(\"'disabled' must be a boolean\");\n\t\t\n\t\tthis.disabled = disabled;\n\t\treturn this.setProperty('disabled', disabled);\n\t}\n});\nForm.CompositeInput = FormCompositeInput;\n\n/**\n * FormTextfield Class\n */\nvar FormTextfield = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\treadonly: null,\n\tmaxlength: null, \n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, options ) {\n\t\tthis.parent('input', 'text', name, options);\n\t\tthis.setContext('Form.Textfield');\n\t},\n\t\n\tsetReadonly: function( readonly ) {\n\t\tif( $type(readonly) != 'boolean' ) \n\t\t\tthrow TypeError(\"'readonly' must be a boolean\");\n\t\t\n\t\tthis.readonly = readonly;\n\t\treturn this.setProperty('readonly', readonly);\n\t},\n\t\n\tsetMaxLength: function( maxlength ) {\n\t\tif( $type(maxlength) != 'number' ) \n\t\t\tthrow TypeError(\"'maxlength' must be a number\");\n\t\t\n\t\tthis.maxlenght = maxlength;\n\t\treturn this.setProperty('maxlength', maxlength);\n\t}\n});\nForm.Textfield = FormTextfield;\n\n/**\n * FormPassword Class\n */\nvar FormPassword = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\treadonly: null,\n\tmaxlength: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, options ) {\n\t\tthis.parent('input', 'password', name, options);\n\t\tthis.setContext('Form.Password');\n\t},\n\t\n\tsetReadonly: function( readonly ) {\n\t\tif( $type(readonly) != 'boolean' ) \n\t\t\tthrow TypeError(\"'readonly' must be a boolean\");\n\t\t\n\t\tthis.readonly = readonly;\n\t\treturn this.setProperty('readonly', readonly);\n\t},\n\t\n\tsetMaxLength: function( maxlength ) {\n\t\tif( $type(maxlength) != 'number' ) \n\t\t\tthrow TypeError(\"'maxlength' must be a number\");\n\t\t\n\t\tthis.maxlenght = maxlength;\n\t\treturn this.setProperty('maxlength', maxlength);\n\t}\n});\nForm.Password = FormPassword;\n\n/**\n * FormCheckbox Class\n */\nvar FormCheckbox = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\tchecked\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, value, options ) {\n\t\tthis.parent('input', 'checkbox', name, options);\n\t\tthis.setContext('Form.Checkbox');\n\t\tthis.setValue(value);\n\t},\n\t\n\tsetChecked: function( checked ) {\n\t\tif( $type(checked) != 'boolean' ) \n\t\t\tthrow TypeError(\"'checked' must be a boolean\");\n\t\t\n\t\tthis.checked = checked;\n\t\treturn this.setProperty('checked', checked);\n\t}\n});\nForm.Checkbox = FormCheckbox;\n\n/**\n * FormRadio Class\n */\nvar FormRadio = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\tchecked\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, value, options ) {\n\t\tthis.parent('input', 'radio', name, options);\n\t\tthis.setContext('Form.Radio');\n\t\tthis.setValue(value);\n\t},\n\t\n\tsetChecked: function( checked ) {\n\t\tif( $type(checked) != 'boolean' ) \n\t\t\tthrow TypeError(\"'checked' must be a boolean\");\n\t\t\n\t\tthis.checked = checked;\n\t\treturn this.setProperty('checked', checked);\n\t}\n});\nForm.Radio = FormRadio;\n\n/**\n * FormFile Class\n */\nvar FormFile = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\taccept  : null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, options ) {\n\t\tthis.parent('input', 'file', name, options);\n\t\tthis.setContext('Form.File');\n\t},\n\t\n\tsetAccept: function( accept ) {\n\t\tif( $type(accept) != 'string' ) \n\t\t\tthrow TypeError(\"'accept' must be a string\");\n\t\t\n\t\tthis.accept = accept;\n\t\treturn this.setProperty('accept', accept);\n\t}\n});\nForm.File = FormFile;\n\n/**\n * FormHidden Class\n */\nvar FormHidden = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, options ) {\n\t\tthis.parent('input', 'hidden', name, options);\n\t\tthis.setContext('Form.Hidden');\n\t}\n});\nForm.Hidden = FormHidden;\n\n/**\n * FormSubmit Class\n */\nvar FormSubmit = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, options ) {\n\t\tthis.parent('input', 'submit', name, options);\n\t\tthis.setContext('Form.Submit');\n\t}\n});\nForm.Submit = FormSubmit;\n\n/**\n * FormReset Class\n */\nvar FormReset = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, options ) {\n\t\tthis.parent('input', 'reset', name, options);\n\t\tthis.setContext('Form.Reset');\n\t}\n});\nForm.Reset = FormReset;\n\n/**\n * FormImage Class\n */\nvar FormImage = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\talt\t\t: null,\n\tsrc\t\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, src, options ) {\n\t\tthis.parent('input', 'image', name, options);\n\t\tthis.setContext('Form.Image');\n\t\tthis.setSrc(src);\n\t},\n\t\n\tsetAlt: function( alt ) {\n\t\tif( $type(alt) != 'string' ) \n\t\t\tthrow TypeError(\"'alt' must be a string\");\n\t\t\n\t\tthis.alt = alt;\n\t\treturn this.setProperty('alt', alt);\n\t},\n\t\n\tsetSrc: function( src ) {\n\t\tif( $type(src) != 'string' ) \n\t\t\tthrow TypeError(\"'src' must be a string\");\n\t\t\n\t\tthis.src = src;\n\t\treturn this.setProperty('src', src);\n\t}\n});\nForm.Image = FormImage;\n\n/**\n * FormTextarea Class\n */\nvar FormTextarea = new Class({\n\t\n\tExtends\t: Form.SimpleInput,\n\tcols\t: null, \n\trows\t: null,\n\treadonly: null,\n\t\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, cols, rows, options ) {\n\t\tthis.parent('textarea', null, name, options);\n\t\tthis.setContext('Form.Textarea');\n\t\tthis.setCols(cols);\n\t\tthis.setRows(rows);\n\t},\n\t\n\tsetCols: function( cols ) {\n\t\tif( $type(cols) != 'number' ) \n\t\t\tthrow TypeError(\"'cols' must be a number\");\n\t\t\n\t\tthis.cols = cols;\n\t\treturn this.setProperty('cols', cols);\n\t},\n\t\n\tsetRows: function( rows ) {\n\t\tif( $type(rows) != 'number' ) \n\t\t\tthrow TypeError(\"'rows' must be a number\");\n\t\t\n\t\tthis.rows = rows;\n\t\treturn this.setProperty('rows', rows);\n\t},\n\t\n\tsetSize: function( size ) {\n\t\tif( !(size instanceof Object) ) \n\t\t\tthrow TypeError(\"'size' must be an Object with cols and rows properties\");\n\t\t\n\t\tthis.setCols(size.cols);\n\t\tthis.setRows(size.rows);\n\t\treturn this;\n\t},\n\t\n\tsetType: function( type ) {\n\t\treturn this;\n\t},\n\t\n\tsetReadonly: function( readonly ) {\n\t\tif( $type(readonly) != 'boolean' ) \n\t\t\tthrow TypeError(\"'readonly' must be a boolean\");\n\t\t\n\t\tthis.readonly = readonly;\n\t\treturn this.setProperty('readonly', readonly);\n\t}\n});\nForm.Textarea = FormTextarea;\n\n/**\n * FormSelect Class\n */\nvar FormSelect = new Class({\n\t\n\tExtends\t: Form.CompositeInput,\n\tmultiple: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( name, options ) {\n\t\tthis.parent('select', name, options);\n\t\tthis.setContext('Form.Select');\n\t},\n\t\n\tsetMultiple: function( multiple ) {\n\t\tif( $type(multiple) != 'boolean' ) \n\t\t\tthrow TypeError(\"'multiple' must be a boolean\");\n\t\t\n\t\tthis.multiple = multiple;\n\t\treturn this.setProperty('multiple', multiple);\n\t},\n\t\n\taddElememet: function( option, where ) {\n\t\tif( !(option instanceof Form.Select.Option) )\n\t\t\tthrow TypeError(\"'option' must be an instance of Form.Select.Option\");\n\t\t\n\t\tthis.parent(option, where);\n\t\treturn this;\n\t},\n\t\n\twrapElement: function( option, where ) {\n\t\tif( !(option instanceof Form.Select.Option) )\n\t\t\tthrow TypeError(\"'option' must be an instance of Form.Select.Option\");\n\t\t\n\t\treturn this.parent(option, where);\n\t},\n\t\n\treplaceElement: function( oldOption, newOption ) {\n\t\tif( !(oldOption instanceof Form.Select.Option) )\n\t\t\tthrow TypeError(\"'oldOption' must be an instance of Form.Select.Option\");\n\t\tif( !(newOption instanceof Form.Select.Option) )\n\t\t\tthrow TypeError(\"'newOption' must be an instance of Form.Select.Option\");\n\t\t\n\t\treturn this.parent(oldOption, newOption);\n\t}\n});\nForm.Select = FormSelect;\n\n/**\n * FormSelectOption\n */\nvar FormSelectOption = new Class({\n\t\n\tExtends\t: TextElementContext,\n\tvalue\t: null,\n\tdisabled: null,\n\tselected: null,\n\t\n\tinitialize: function( options ) {\n\t\tthis.parent('option', options);\n\t\tthis.setContext('Form.Select.Option');\n\t},\n\t\n\tsetValue: function( value ) {\n\t\tif( !['string', false].contains($type(value)) ) \n\t\t\tthrow TypeError(\"'value' must be a string\");\n\t\t\n\t\tthis.value = value;\n\t\treturn this.setProperty('value', value);\n\t},\n\t\n\tsetDisabled: function( disabled ) {\n\t\tif( $type(disabled) != 'boolean' ) \n\t\t\tthrow TypeError(\"'disabled' must be a boolean\");\n\t\t\n\t\tthis.disabled = disabled;\n\t\treturn this.setProperty('disabled', disabled);\n\t},\n\t\n\tsetSelected: function( selected ) {\n\t\tif( $type(selected) != 'boolean' ) \n\t\t\tthrow TypeError(\"'selected' must be a boolean\");\n\t\t\n\t\tthis.selected = selected;\n\t\treturn this.setProperty('selected', selected);\n\t}\n});\nForm.Select.Option = FormSelectOption;\n\n/**\n * FormLabel Class\n */\nvar FormLabel = new Class({\n\t\n\tExtends\t: TextElementContext,\n\tvalue\t: null,\n\tdisabled: null,\n\tselected: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('label', options);\n\t\tthis.setContext('Form.Label');\n\t},\n\t\n\tsetValue: function( value ) {\n\t\tif( !['string', false].contains($type(value)) ) \n\t\t\tthrow TypeError(\"'value' must be a string\");\n\t\t\n\t\tthis.value = value;\n\t\treturn this.setProperty('value', value);\n\t},\n\t\n\tsetDisabled: function( disabled ) {\n\t\tif( $type(disabled) != 'boolean' ) \n\t\t\tthrow TypeError(\"'disabled' must be a boolean\");\n\t\t\n\t\tthis.disabled = disabled;\n\t\treturn this.setProperty('disabled', disabled);\n\t},\n\t\n\tsetSelected: function( selected ) {\n\t\tif( $type(selected) != 'boolean' ) \n\t\t\tthrow TypeError(\"'selected' must be a boolean\");\n\t\t\n\t\tthis.disabled = selected;\n\t\treturn this.setProperty('selected', selected);\n\t}\n});\nForm.Label = FormLabel;\n\n/**\n * Container Class\n */\nvar Container = new Class({\n\t\n\tExtends\t: Div, \n\tclear\t: null,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function(options) {\n\t\tthis.parent(options);\n\t\tthis.setContext('Container');\n\t\tthis.clear = new Clear();\n\t},\n\t\n\taddElement: function( element, where ) {\n\t\tthis.parent(element, where);\n\t\tthis.parent(this.clear, 'bottom');\n\t\treturn this;\n\t},\n\t\n\twrapElement: function( element, where ) {\n\t\tthis.parent(element, where);\n\t\tthis.parent(this.clear, 'bottom');\n\t\treturn this;\n\t}\n});\n\nvar Section = new Class({\n\t\n\tExtends\t: ComplexElementContext, \n\theader\t: null, \n\tcontent\t: null, \n\tfooter\t: null, \n\t\n\tinitialize: function(options) {\n\t\tthis.parent('div', options);\n\t\tthis.setContext('Section');\n\t\t\n\t\tthis.header = new Div();\n\t\tthis.content = new Container();\n\t\tthis.footer = new Div();\n\t\t\n\t\tthis.addElement(this.content);\n\t},\n\t\n\tsetHeader: function( item ) {\n\t\tif( !this.hasElement(this.header) )\n\t\t\tthis.addElement(this.header, 'top');\n\t\t\n\t\tthis.header.disposeElements();\n\t\tthis.header.addElement(item);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tshowHeader: function() {\n\t\tthis.header.show();\n\t\treturn this;\n\t},\n\t\n\thideHeader: function() {\n\t\tthis.header.hide();\n\t\treturn this;\n\t},\n\t\n\tsetFooter: function( item ) {\n\t\tif( !this.hasElement(this.footer) )\n\t\t\tthis.addElement(this.footer, 'bottom');\n\t\t\n\t\tthis.footer.clearElements();\n\t\tthis.footer.addElement(item);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tshowFooter: function() {\n\t\tthis.header.show();\n\t\treturn this;\n\t},\n\t\n\thideFooter: function() {\n\t\tthis.header.hide();\n\t\treturn this;\n\t},\n\t\n\taddContent: function( item ) {\n\t\tthis.content.addElement(item);\n\t\treturn this;\n\t},\n\t\n\taddContents: function( items ) {\n\t\tthis.content.addElements(items);\n\t\treturn this;\n\t},\n\t\n\tremoveContent: function( item ) {\n\t\tthis.content.removeElement(item);\n\t\treturn this;\n\t},\n\t\n\tremoveContents: function( items ) {\n\t\tthis.content.removeElements(items);\n\t\treturn this;\n\t},\n\t\n\tclearContents: function() {\n\t\tthis.content.clearElements();\n\t\treturn this;\n\t},\n\t\n\treplaceContent: function( oldContent, newContent ) {\n\t\tthis.content.replaceElement(oldContent, newContent);\n\t\treturn this;\n\t},\n\t\n\treplaceContents: function( items ) {\n\t\tthis.clearContents();\n\t\tthis.addContents(items);\n\t\treturn this;\n\t},\n\t\n\tdisposeContents: function() {\n\t\tthis.content.disposeElements();\n\t\treturn this;\n\t}\n});\n\nvar Sections = new Class({\n\t\n\tExtends\t\t: ComplexElementContext, \n\theaders\t\t: null, \n\tcontents\t: null,\n\taccordion\t: null,\n\tsections\t: null,\n\tprototypes\t: null,\n\tdispatch\t: new Dispatch(),\n\t\n\tinitialize: function( prototypes, options ) {\n\t\tthis.parent('div', options);\n\t\tthis.setContext('Sections');\n\t\t\n\t\tthis.prototypes = prototypes;\n\t\tthis.headers = new Array();\n\t\tthis.contents = new Array();\n\t\tthis.sections = new ContextOrganizer(this);\n\t},\n\t\n\taddSection: function( name, item ) {\n\t\treturn this.sections.addLine(name, item);\n\t},\n\t\n\taddSections: function( items ) {\n\t\treturn this.sections.addLines(items);\n\t},\n\t\n\tremoveSection: function( name ) {\n\t\treturn this.sections.removeLine(name);\n\t},\n\t\n\tremoveSections: function( names ) {\n\t\tif( $type(names) == 'object' ) names = $H(names).getKeys();\n\t\treturn this.sections.removeLines(names);\n\t},\n\t\n\tnewLine: function( name, item ) {\n\t\tvar section = new Section();\n\t\tsection.setHeader( $defined(item['NAME']) ? new Text(item['NAME']) : new Text(name) );\n\t\t\n\t\tthis.headers.include( $(section.header) );\n\t\tthis.contents.include( $(section.content) );\n\t\t\n\t\t$each(this.prototypes, function(prototype) {\n\t\t\tvar args = new Array();\n\t\t\tif( prototype.args ) {\n\t\t\t\tprototype.args.each( function(arg) {\n\t\t\t\t\targs.extend( [item[arg.toUpperCase()]] );\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\targs = item;\n\t\t\t}\n\t\t\tvar content = prototype.func.run(args);\n\t\t\tif( $type(content) == 'array' )\n\t\t\t\tsection.addContents( content );\n\t\t\telse \n\t\t\t\tsection.addContent( content );\t \n\t\t});\n\t\t\n\t\treturn section;\n\t},\n\t\n\tsource: function( source, inquiry, loaders ) {\n\t\tnew Webics.Request( source, inquiry, loaders, [this.addSections, this.accordionable] );\t\t\t\n\t\treturn this;\n\t},\n\t\n\taccordionable: function( options ) {\n\t\tthis.accordion = new Accordion(this.headers, this.contents, {display:-1, alwaysHide:true});\n\t\treturn this;\n\t}\n});\n\nvar ListManager = new Class({\n\t\n\tExtends\t: Sections,\n\ttoggler\t: null,\n\ttogglers: null,\n\t\n\tinitialize: function( prototypes, toggler, options ) {\n\t\tthis.parent(prototypes, options);\n\t\t\n\t\tthis.toggler = toggler;\n\t\tthis.togglers = new Hash();\n\t},\n\t\n\tdisable: function( name ) {\n\t\tif( $type(name) == 'object' ) \n\t\t\tname = $H(name).getKeys()[0];\n\t\t\n\t\tif( this.sections.hasLine(name) )\n\t\t\tthis.sections.getLine(name).replaceClass('enabled','disabled');\n\t\t\n\t\tif( this.togglers.has(name) )\n\t\t\tthis.togglers.get(name).changeState(0);\n\t\treturn this;\n\t},\n\t\n\tenable: function( name ) {\n\t\tif( $type(name) == 'object' ) \n\t\t\tname = $H(name).getKeys()[0];\n\t\t\n\t\tif( this.sections.hasLine(name) )\n\t\t\tthis.sections.getLine(name).replaceClass('disabled','enabled');\n\t\t\n\t\tif( this.togglers.has(name) )\n\t\t\tthis.togglers.get(name).changeState(1);\n\t\treturn this;\n\t},\n\t\n\tnewLine: function( name, item ) {\n\t\tvar section = this.parent(name, item);\n\t\tvar args = new Array();\n\t\t\n\t\tif( this.toggler.args ) {\n\t\t\tthis.toggler.args.each( function(arg) {\n\t\t\t\targs.extend( [item[arg.toUpperCase()]] );\n\t\t\t});\n\t\t}\n\t\t\n\t\tvar toggler = this.toggler.func.run(args);\n\t\tsection.setHeader(toggler);\n\t\tthis.togglers.set(name,toggler);\n\t\t\n\t\tif( item['ISVALID'] ) {\n\t\t\tthis.enable(name);\n\t\t\tsection.replaceClass('disabled','enabled');\n\t\t} else {\n\t\t\tthis.disable(name);\n\t\t\tsection.replaceClass('enabled','disabled');\n\t\t}\n\t\treturn section;\n\t}\n});\n\nvar Navigation = new Class({\n\t\n\tExtends\t\t: Sections,\n\t\n\tinitialize: function( options ) {\n\t\tthis.parent(null, options);\n\t\tthis.setContext('Navigation');\n\t},\n\t\n\tnewLine: function( name, item ) {\n\t\tvar section = new Section();\n\t\tsection.setHeader( new Span().setText(name) );\n\t\t\n\t\tthis.headers.include( $(section.header) );\n\t\tthis.contents.include( $(section.content) );\n\t\t\n\t\tsection.addEvent('click', item.action);\n\t\t\n\t\tif( $defined(item.submenu) ) {\n\t\t\t$each(item.submenu, function(action, name) {\n\t\t\t\tvar submenu = new Div();\n\t\t\t\tsubmenu.addElement( new Span().setText(name) );\n\t\t\t\t$each(action, function( callback, event) {\n\t\t\t\t\tsubmenu.addEvent(event, callback);\n\t\t\t\t});\n\t\t\t\tsection.addContent(submenu);\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn section;\n\t},\n\t\n\taccordionable: function( options ) {\n\t\tthis.accordion = new Accordion(this.headers, this.contents, {display:-1, alwaysHide:true, trigger:'click'});\n\t\treturn this;\n\t}\n});\n\nvar Menu = new Class({\n\t\n\tExtends\t\t: Sections,\n\t\n\tinitialize: function( options ) {\n\t\tthis.parent(null, options);\n\t\tthis.setContext('Menu');\n\t},\n\t\n\tnewLine: function( name, item ) {\n\t\tvar section = new Section();\n\t\tsection.setHeader( new Text(name) );\n\t\t\n\t\tthis.headers.include( $(section.header) );\n\t\tthis.contents.include( $(section.content) );\n\t\t\n\t\tvar submenus = new Array();\n\t\t$each(item, function(href, name) {\n\t\t\tvar submenu = new Div().addElement(new A(href).setText(name));\n\t\t\tsubmenus.include(submenu);\n\t\t});\n\t\tsection.addContents( submenus );\n\t\t\n\t\treturn section;\n\t},\n\t\n\taccordionable: function( options ) {\n\t\tthis.accordion = new Accordion(this.headers, this.contents, {display:-1, alwaysHide:true, trigger:'click'});\n\t\treturn this;\n\t}\n});\n\nvar Window = new Class({\n\t\n\tExtends\t: Section, \n\tcloser\t: null, \n\tmask\t: null,\n\t\n\tinitialize: function(options) {\n\t\tthis.parent(options);\n\t\tthis.setContext('Window');\n\t\t\n\t\tthis.mask = new Mask('content');\n\t\tthis.closer = new Button(this.hide);\n\t\t\n\t\tthis.hide();\n\t\t$(document.body).insert(this);\n\t},\n\t\n\tsetHeader: function( text ) {\n\t\tthis.parent( new Span().setText(text) );\t\n\t\treturn this;\n\t},\n\t\n\tshowClose: function( text, image ) {\n\t\tif( this.hasElement(this.closer) )\n\t\t\treturn this;\n\t\t\n\t\tthis.addElement(this.closer);\n\t\t\n\t\tif( $defined(image) ) {\n\t\t\tthis.closer.addElement( new Image(text, image) );\n\t\t} else {\n\t\t\tthis.closer.addElement( new Text(image) );\n\t\t}\n\t},\n\t\n\tshow: function() {\n\t\tthis.mask.show();\n\t\treturn this.fade('in');\n\t},\n\t\n\thide: function() {\n\t\tthis.mask.hide();\n\t\treturn this.fade('out');\n\t},\n\t\n\tclose: function() {\n\t\tthis.mask.destroy();\n\t\tthis.element.set('tween', {\n\t\t\tonComplete: function() { \n\t\t\t\tthis.dispose();\n\t\t\t}.bind(this)\n\t\t}).fade('out');\n\t\treturn this;\n\t},\n\t\n\tautoclose: function( delay ) {\n\t\treturn this.close.delay(delay);\n\t},\n\t\n\tcenter: function( anchor ) {\n\t\treturn this.position({relativeTo: anchor, position: 'center'} );\n\t}, \n\t\n\tdrag: function() {\n\t\tthis.draggable(this.header);\n\t}\n});\n\nvar Banner = new Class({\n\t\n\tExtends\t: Section, \n\tcloser\t: null, \n\t\n\tinitialize: function(options) {\n\t\tthis.parent(options);\n\t\tthis.setContext('Banner');\n\t\t\n\t\tthis.closer = new Button(this.nix.pass(true));\n\t\t\n\t\tthis.hide();\n\t\t$(document.body).insert(this);\n\t},\n\t\n\tsetHeader: function( text ) {\n\t\tthis.parent( new Span().setText(text) );\t\n\t\treturn this;\n\t},\n\t\n\tshowClose: function( text, image ) {\n\t\tif( this.hasElement(this.closer) )\n\t\t\treturn this;\n\t\t\n\t\tthis.addElement(this.closer);\n\t\t\n\t\tif( $defined(image) ) {\n\t\t\tthis.closer.addElement( new Image(text, image) );\n\t\t} else {\n\t\t\tthis.closer.addElement( new Text(image) );\n\t\t}\n\t}\n});\n\n/*\n * Request\n */\nvar Webics = new Class({});\n\nvar WebicsQueue = new Class({\n\t\n\tExtends\t: Request.Queue,\n\t\n\tdispatch: function( request ) {\n\t\tvar random = $randomLetters(10);\n\t\tthis.addRequest('request-'+random, request);\n\t\trequest.send();\n\t}\n});\nWebics.Queue = WebicsQueue;\n\nvar WebicsRequest = new Class({\n\t\n\tExtends\t: Request.JSON,\n\t\n\tinitialize: function( source, inquiry, loaders, callback, message, showSpinner ) {\t\t\n\t\tif( $type(source) != 'string' ) \n\t\t\tthrow TypeError(\"'source' must be a string\");\n\t\t\n\t\tif( $type(inquiry) != 'string' ) \n\t\t\tthrow TypeError(\"'inquiry' must be a string\");\n\t\t\n\t\tif( ($type(loaders) != false ) && ($type(loaders) != 'object') ) \n\t\t\tthrow TypeError(\"'loaders' must be an Object of properties\");\n\t\t\n\t\tif( ($type(callback) != false ) && ($type(callback) != 'array') ) \n\t\t\tthrow TypeError(\"'callback' must be an Object of properties\");\n\n\t\tif( ($type(message) != false ) && ($type(message) != 'string') ) \n\t\t\tthrow TypeError(\"'message' must be a string\");\n\t\t\n\t\tif( $defined(showSpinner) ) {\n\t\t\tvar spinner = new Spinner(showSpinner, {message:'Loading ...'});\n\t\t\tspinner.show();\n\t\t}\n\t\t\n\t\tthis.parent({\n\t\t\turl\t\t\t: source,\n\t\t\tdata\t\t: {request: inquiry, arguments: loaders, 'return': 'JSON'},\n\t\t\tonSuccess \t: function(response) {\n\t\t\t\tprocessResponse(response, callback, message, inquiry);\n\t\t\t\tif( $defined(spinner) ) spinner.destroy();\n\t\t\t}\n\t\t});\n\t\t\t\t\n\t\t//new Webics.Queue({autoAdvance:true}).dispatch(this);\n\t\tthis.post();\n\t}\n});\nWebics.Request = WebicsRequest;\n\n/*\n * Inquiry\n */\n\n/**\n * Inquiry Class\n */\nvar Inquiry = new Class({\n\t\n\tExtends\t\t: Form,\n\tspin\t\t: null,\n\tclear\t\t: null,\n\tcaption\t\t: null,\n\tinputs\t\t: null,\n\tinquiry\t\t: null,\n\tbuttons\t\t: null,\n\torganizer\t: null,\n\tmessage \t: null, \n\tcallback \t: null,\n\tdispatch\t: new Dispatch(),\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( action, organizer, options ) {\n\t\tthis.parent(action, options);\n\t\tthis.setContext('Inquiry');\n\t\t\n\t\tthis.inputs = new Hash();\n\t\tthis.buttons = new Hash();\n\t\tthis.clear = new Clear();\n\t\tthis.caption = new Caption();\n\t\tthis.organizer = organizer ? organizer : new Organizer.Tabulation();\n\t\tthis.addElement(this.organizer);\n\t},\n\t\n\tsetCaption: function( caption ) {\n\t\tif( !this.hasElement(this.caption) )\n\t\t\tthis.addElement(this.caption, 'top');\n\n\t\tthis.caption.setText(caption);\n\t},\n\t\n\taddElement: function( element, where ) {\n\t\tthis.parent(element, where);\n\t\tthis.parent(this.clear, 'bottom');\n\t\treturn this;\n\t},\n\t\n\twrapElement: function( element, where ) {\n\t\tthis.parent(element, where);\n\t\tthis.parent(this.clear, 'bottom');\n\t\treturn this;\n\t},\n\t\n\tsetInquiry: function( inquiry ) {\n\t\tthis.inquiry = inquiry;\n\t\treturn this;\n\t},\n\t\n\tsetMessage: function( message ) {\n\t\tthis.message = message;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Get Inputs\n\t */\n\tgetInput: function( name ) {\n\t\tif( $type(name) != 'string' ) \n\t\t\tthrow TypeError(\"'name' must be a string\");\n\t\t\n\t\treturn this.inputs.get(name);\n\t},\n\t\n\t\n\tgetInputs: function() {\n\t\tinputs = {};\n\t\tthis.inputs.each( function(input) {\n\t\t\tinputs[input.name] = input.value;\n\t\t});\n\t\treturn inputs;\n\t},\n\t\n\t/**\n\t * Add Inputs\n\t */\n\taddInput: function( input ) {\n\t\tif( !(input instanceof Form.SimpleInput) && !(input instanceof Form.CompositeInput) ) \n\t\t\tthrow TypeError(\"'input' must be an instance of Form.SimpleInput or Form.CompositeInput\");\n\t\t\n\t\tif( input instanceof Form.Hidden ) {\n\t\t\tthis.addElement(input, 'top');\n\t\t} else {\n\t\t\tthis.organizer.addLine(input.name, this.newLine(input));\n\t\t}\n\t\t\n\t\tthis.inputs.set(input.name, input);\n\t\treturn this;\n\t},\n\t\n\taddInputs: function( inputs ) {\n\t\tif( !(inputs instanceof Array) ) \n\t\t\tthrow TypeError(\"'inputs' must be an Array of Form.SimpleInput or Form.CompositeInput instances\");\n\t\t\n\t\t$each(inputs, function(input) { this.addInput(input); }, this);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Remove Inputs\n\t */\n\tremoveInput: function( input ) {\n\t\tif( !(input instanceof Form.SimpleInput) && !(input instanceof Form.CompositeInput) ) \n\t\t\tthrow TypeError(\"'input' must be an instance of Form.SimpleInput or Form.CompositeInput\");\n\t\t\n\t\tif( input instanceof Form.Hidden ) {\n\t\t\tthis.removeElement(input);\n\t\t} else {\n\t\t\tthis.organizer.removeLine(input.name);\n\t\t}\n\t\t\n\t\tthis.inputs.erase(input.name);\n\t\treturn this;\n\t},\n\t\n\tremoveInputs: function( inputs ) {\n\t\tif( !(inputs instanceof Array) ) \n\t\t\tthrow TypeError(\"'inputs' must be an Array of Form.SimpleInput or Form.CompositeInput instances\");\n\t\t\n\t\t$each(inputs, function(input) { this.removeInput(input); }, this);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Clear Inputs\n\t */\n\tclearInputs: function() {\n\t\tthis.organizer.clearLines();\n\t\tthis.inputs.empty();\n\t\treturn this;\n\t},\t\n\t\n\tresetInputs: function() {\n\t\tthis.inputs.each( function(input) {\n\t\t\tlog(\"RESETTING\"+input.name);\n\t\t\tinput.reset();\n\t\t});\n\t},\n\t\n\t/**\n\t * Replace Input\n\t */\n\treplaceInput: function( oldInput, newInput ) {\n\t\tif( oldInput instanceof Form.Hidden && newInput instanceof Form.Hidden ) {\n\t\t\tthis.replaceElement( oldInput, newInput );\n\t\t} else {\n\t\t\tthis.organizer.replaceLine(oldInput.name, newInput.name, this.newLine(newInput));\n\t\t}\n\t\t\n\t\tthis.inputs.erase(oldInput.name);\n\t\tthis.inputs.set(newInput.name, newInput);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Refresh Inputs\n\t */\n\trefreshInput: function( input ) {\n\t\treturn this.replaceInput(input,input);\n\t},\n\t\n\trefreshInputs: function() {\n\t\tthis.inputs.each( function(input) { this.refreshInput(input); }, this);\n\t\treturn this;\n\t},\n\t\n\tnewLine: function( input ) {\n\t\tif( !(input instanceof Form.SimpleInput) && !(input instanceof Form.CompositeInput) ) \n\t\t\tthrow TypeError(\"'input' must be an instance of Form.SimpleInput or Form.CompositeInput\");\n\t\t\n\t\tvar line = new Array();\n\t\t\n\t\tif( input.label ) {\n\t\t\tline.include(input.label);\n\t\t}\n\t\tif( input ) {\n\t\t\tline.include(input);\n\t\t}\n\t\tif( input.info ) {\n\t\t\tline.include(input.info);\n\t\t}\n\t\tif( input.validate ) {\n\t\t\tline.include(input.validate);\n\t\t}\n\t\treturn line;\n\t},\n\t\n\tsetValues: function(data) {\n\t\tthis.inputs.each( function(input, field) {\n\t\t\tinput.setValue(data[field.toUpperCase()]);\n\t\t});\n\t\treturn this;\n\t},\n\t\n\tsource: function( source, inquiry, loaders ) {\n\t\tnew Webics.Request( source, inquiry, loaders, [this.setValues] );\n\t\treturn this;\n\t},\n\t\n\trefresh: function() {\n\t\tlog('refreshing');\n\t},\n\t\n\tasynchronous: function( inquiry, message, refresh ) {\n\t\tthis.setInquiry(inquiry);\n\t\tthis.setMessage(message);\n\t\tif( refresh ) {\n\t\t\tthis.callback = this.setValues;\n\t\t} else {\n\t\t\tthis.callback = null;\n\t\t}\n\t\tthis.parent();\n\t},\n\t\n\tshowSubmit: function( text, image ) {\n\t\tvar submit;\n\t\t\n\t\tif( image ) {\n\t\t\tsubmit = new Form.Image('submit', image);\n\t\t\tsubmit.setAlt(text);\n\t\t} else {\n\t\t\tsubmit = new Form.Submit('submit');\n\t\t\tsubmit.setValue(text);\n\t\t}\n\t\t\n\t\tif( this.buttons.has(submit.name) ) {\n\t\t\tthis.replaceElement(this.buttons.get(submit.name), submit);\n\t\t} else {\n\t\t\tthis.addElement(submit, 'bottom');\n\t\t}\n\t\t\n\t\tthis.buttons.set(submit.name, submit);\n\t\treturn this;\n\t},\n\t\n\tshowReset: function( text ) {\n\t\tvar reset = new Form.Reset('reset');\n\t\treset.setValue(text);\n\t\t\n\t\tif( this.buttons.has(reset.name) ) {\n\t\t\tthis.replaceElement(this.buttons.get(reset.name), reset);\n\t\t} else {\n\t\t\tthis.addElement(reset, 'bottom');\n\t\t}\n\t\t\n\t\tthis.buttons.set(reset.name, reset);\n\t\treturn this;\n\t},\n\t\n\tshowSpinner: function ( element ) {\n\t\tthis.spin = element;\n\t},\n\t\n\tsend: function() {\n\t\tnew Webics.Request( this.action, this.inquiry, this.getInputs(), [this.callback], this.message, this.spin );\n\t\treturn this;\n\t}\n});\n\nvar FormSimpleInput = Class.refactor(Form.SimpleInput, {\n\t\n\tunique\t: null,\n\tlabel \t: null,\n\t\n\tinitialize: function( tag, type, name, options ) {\n\t\tthis.previous(tag, type, name, options);\n\t\t\n\t\tthis.unique = name+\"-\"+$random(0, 999);\n\t\tthis.label = new Form.Label();\n\t\t\n\t\tthis.addEvent('change', function() {\n\t\t\tthis.value = this.getProperty('value');\n\t\t}.bind(this));\n\t},\n\t\n\tsetValue: function( value ) {\n\t\tthis.previous(value);\n\t\tthis.fireEvent('change');\n\t\treturn this;\n\t},\n\t\n\tsetLabel: function( label ) {\n\t\tthis.label.setText(label);\n\t\treturn this;\n\t},\n\t\n\treset: function() {\n\t\tthis.setValue();\n\t}\n});\nForm.SimpleInput = FormSimpleInput;\n\nvar FormCompositeInput = Class.refactor(Form.CompositeInput, {\n\t\n\tunique\t: null,\n\tlabel\t: null, \n\t\n\tinitialize: function( tag, name, options ) {\n\t\tthis.previous(tag, name, options);\n\t\t\n\t\tthis.unique = name+\"-\"+$random(0, 999);\n\t\tthis.label = new Form.Label();\n\t\t\n\t\tthis.addEvent('change', function() {\n\t\t\tthis.value = this.getProperty('value');\n\t\t}.bind(this));\n\t},\n\t\n\tsetValue: function( value ) {\n\t\tthis.previous(value);\n\t\tthis.fireEvent('change');\n\t\treturn this;\n\t},\n\t\n\tsetLabel: function( label ) {\n\t\tthis.label.setText(label);\n\t\treturn this;\n\t},\n\t\n\treset: function() {\n\t\tthis.setValue();\n\t}\n});\nForm.CompositeInput = FormCompositeInput;\n\n/**\n * InquirySelect Class\n */\nvar InquirySelect = new Class({\n\t\n\tExtends\t\t: Form.Select,\n\tdisplay\t\t: null,\n\toptions\t\t: null,\n\tdispatch\t: new Dispatch(),\n\t\n\tinitialize: function( name, options ) {\n\t\tthis.parent(name, options);\n\t\tthis.setContext('Inquiry.Select');\n\t\tthis.options = new ContextOrganizer(this);\n\t},\n\t\n//\tsetDisplay: function( display ) {\n//\t\tthis.display = display;\n//\t\treturn this.setProperty('display', display);\n//\t},\n\t\n\taddOption: function( name, item ) {\n\t\treturn this.options.addLine(name, item);\n\t},\n\t\n\taddOptions: function( items ) {\n\t\treturn this.options.addLines(items);\n\t},\n\t\n\tremoveOption: function( name ) {\n\t\treturn this.options.removeLine(name);\n\t},\n\t\n\tremoveOptions: function( names ) {\n\t\treturn this.options.removeLines(names);\n\t},\n\t\n\tclearOptions: function() {\n\t\treturn this.options.clearLines();\n\t},\t\n\t\n\treplaceOption: function( name, item ) {\n\t\treturn this.options.replaceLine(name, item);\n\t},\n\t\n\tsetValue: function( option ) {\n\t\tif( this.options.hasLine(option) ) {\n\t\t\tthis.options.getLine(option).setSelected(true);\n\t\t\tthis.fireEvent('change');\n\t\t}\n\t\treturn this;\n\t},\n\t\n\tsetOptions: function( items ) {\n\t\tthis.clearOptions();\n\t\tthis.addOptions(items);\n\t\treturn this;\n\t},\n\t\n\tnewLine: function( name, item ) {\n\t\tvar option = new Form.Select.Option();\n\t\t//var display = this.display ? this.display : this.name;\n\t\toption.setValue(name);\n\t\toption.addText(item);\n\t\t//if( $chk(item['ISVALID']) ) option.setDisabled(!item['ISVALID']);\n\t\treturn option;\n\t},\n\t\n\tsource: function( source, inquiry, loaders ) {\n\t\tthis.clearOptions();\n\t\tthis.addOption('loading', 'Loading ...');\n\t\tnew Webics.Request( source, inquiry, loaders, [this.setOptions] );\n\t\treturn this;\n\t},\n\t\n\treset: function() {\n\t\tthis.elements.each( function(option){\n\t\t\toption.setSelected(false);\n\t\t});\n\t\tthis.fireEvent('change');\n\t\treturn this;\n\t}\n});\nInquiry.Select = InquirySelect;\n\nvar InquiryBuilder = new Class({\n\t\n\tinitiatize: function() {\n\t\n\t},\n\n\tbuild: function( service ) {\n\t\tvar form = new Inquiry(WS_ENDPOINT, new Organizer.Planner());\n\t\tnew Webics.Request(WS_ENDPOINT, 'definition', {service: service}, [\n\t\t   function( parameters ) {\n\t\t\t\t$H(parameters).each( function(signature, parameter) {\n\t\t\t\t\tswitch(signature.type) {\n\t\t\t\t\tcase 'String':\n\t\t\t\t\t\tif( signature.length <= 128 ) \n\t\t\t\t\t\t\tform.addInput( new Form.Textfield(parameter).setMaxLength(signature.length).setLabel(parameter) );\n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tform.addInput( new Form.Textarea(parameter, 20, 20).setLabel(parameter) );\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif( signature.isEntity )\n\t\t\t\t\t\t\tform.addInput( new Inquiry.Select(parameter).source(WS_ENDPOINT, 'load').setLabel(parameter) );\n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tform.addInput( new Form.Textfield(parameter).setMaxLength(signature.length).setLabel(parameter) );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t});\n\t\t   }\n\t\t]);\n\t\treturn form;\n\t}\n});\n\nvar Caption = new Class({\n\t\n\tExtends\t: TextElementContext,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('div', options);\n\t\tthis.setContext('Caption');\n\t}\n});\n\nvar Toggler = new Class({\n\t\n\tExtends\t\t: Inquiry, \n\tstate0\t\t: null,\n\tstate1\t\t: null,\n\tcurrent\t\t: null,\n\t\n\tinitialize: function( action, state0, state1, organizer, options ) {\n\t\tthis.parent(action, state0.inquiry, organizer, options);\n\t\tthis.setContext('Toggler');\n\t\tthis.state0 = state0;\n\t\tthis.state1 = state1;\n\t\tthis.current = 1;\n\t},\n\t\n\tchangeState: function( state ) {\n\t\tswitch(state) {\n\t\tcase 0:\n\t\t\tthis.setInquiry(this.state0.inquiry);\n\t\t\tif( this.state0.submit ) \n\t\t\t\tthis.showSubmit(this.state0.submit.text, this.state0.submit.image);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tthis.setInquiry(this.state1.inquiry);\n\t\t\tif( this.state1.submit ) \n\t\t\t\tthis.showSubmit(this.state1.submit.text, this.state1.submit.image);\n\t\t\tbreak;\n\t\t}\n\t\treturn this;\n\t}\n});\n\n/*\n * DynamicInquiry\n */\n\nvar DynamicInquiry = new Class({\n\t\n\tExtends\t\t\t: Inquiry,\n\tregisters\t\t: null,\n\tfollowers\t\t: null,\n\tcurrentRegister\t: null,\n\t\n\tinitialize: function( action, inquiry, organizer, options ) {\n\t\tthis.parent(action, inquiry, organizer, options);\n\t\tthis.setContext('DynamicInquiry');\n\t\tthis.registers = new Hash();\n\t\tthis.followers = new Hash();\n\t\tthis.currentRegister = new Hash();\n\t},\n\t\n\tupdateFollowers: function( leaderInput ) {\n\t\tif( !(leaderInput instanceof Form.SimpleInput) && !(leaderInput instanceof Form.CompositeInput) )\n\t\t\tthrow TypeError(\"'leaderInput' must be an instance of Form.SimpleInput or Form.CompositeInput\");\n\t\t\n\t\tvar followers = this.followers.get(leaderInput.unique);\n\t\tfollowers.each( function( follower ) {\n\t\t\tfollower.run(leaderInput.value);\n\t\t});\n\t\treturn this;\n\t},\n\t\n\tfollowInput: function( leaderInput, callback ) {\n\t\tif( !(leaderInput instanceof Form.SimpleInput) && !(leaderInput instanceof Form.CompositeInput) )\n\t\t\tthrow TypeError(\"'leaderIput' must be an instance of Form.SimpleInput or Form.CompositeInput\");\n\t\n\t\tif( !this.followers.has(leaderInput.unique) ) {\n\t\t\tleaderInput.addEvent('change', function() {\n\t\t\t\tthis.updateFollowers(leaderInput);\n\t\t\t}.bind(this));\n\t\t\t\n\t\t\tthis.followers.set(leaderInput.unique, new Array());\n\t\t};\n\t\t\n\t\tthis.followers.get(leaderInput.unique).include(callback);\n\t\treturn this;\n\t},\n\t\n\tupdateRegisters: function( leaderInput ) {\n\t\tif( !(leaderInput instanceof Form.SimpleInput) && !(leaderInput instanceof Form.CompositeInput) )\n\t\t\tthrow TypeError(\"'leaderInput' must be an instance of Form.SimpleInput or Form.CompositeInput\");\n\t\t\n\t\tvar oldInput = this.currentRegister.get(leaderInput.unique);\n\t\tvar newInput = this.registers.get(leaderInput.unique).get(leaderInput.value);\n\t\t\n\t\tif( $defined(newInput) ) {\n\t\t\tthis.hasElement(oldInput) ? this.replaceInput(oldInput, newInput) : this.addInput(newInput);\n\t\t} else {\n\t\t\tthis.hasElement(oldInput) ? this.removeInput(oldInput) : null;\n\t\t}\n\t\tthis.currentRegister.set(leaderInput.unique, newInput);\n\t\treturn this;\n\t},\n\t\n\tregisterInput: function( leaderInput, value, input ) {\n\t\tif( !(leaderInput instanceof Form.SimpleInput) && !(leaderInput instanceof Form.CompositeInput) )\n\t\t\tthrow TypeError(\"'leaderIput' must be an instance of Form.SimpleInput or Form.CompositeInput\");\n\t\tif( !(input instanceof Form.SimpleInput) && !(input instanceof Form.CompositeInput) )\n\t\t\tthrow TypeError(\"'input' must be an instance of Form.SimpleInput or Form.CompositeInput\");\n\t\tlog(value);\n\t\tif( !this.registers.has(leaderInput.unique) ) {\n\t\t\tleaderInput.addEvent('change', function() {\n\t\t\t\tthis.updateRegisters(leaderInput);\n\t\t\t}.bind(this));\n\t\t\t\n\t\t\tthis.currentRegister.set(leaderInput.unique, input);\n\t\t\tthis.registers.set(leaderInput.unique, new Hash());\n\t\t};\n\t\t\n\t\tthis.registers.get(leaderInput.unique).set(value, input);\n\t\treturn this;\n\t}\n\t\n});\n\n/*\n * Tabulation\n */\n\nvar Tabulation = new Class({\n\t\n\tExtends\t\t: Table,\n\tprototypes\t: null,\n\tfilters\t\t: null,\n\tthead\t\t: null, \n\ttbody\t\t: null,\n\ttfoot\t\t: null,\n\tdispatch\t: new Dispatch(),\n\tselect_callback\t: null,\n\t\n\tinitialize: function( options ) {\n\t\tthis.parent(options);\n\t\tthis.setContext('Tabulation');\n\t\tthis.thead = new Tabulation.Thead();\n\t\tthis.tbody = new Tabulation.Tbody();\n\t\tthis.tfoot = new Tabulation.Tfoot();\n\t\tthis.prototypes = new Hash();\n\t\tthis.filters = new Array();\n\t},\n\t\n\tsetHeader: function( items ) {\n\t\tif( !this.hasElement(this.thead) )\n\t\t\tthis.addElement(this.thead, 'top');\n\t\t\n\t\tif( this.thead.isEmpty() ) \n\t\t\tthis.thead.addRow('head', items);\n\t\telse \n\t\t\tthis.thead.replaceRow('head', 'head', items);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tshowHeader: function() {\n\t\tthis.thead.show();\n\t\treturn this;\n\t},\n\t\n\thideHeader: function() {\n\t\tthis.thead.hide();\n\t\treturn this;\n\t},\n\t\n\tsetFooter: function( items ) {\n\t\tif( !this.hasElement(this.tfoot) ) \n\t\t\tthis.addElement(this.tfoot, 'top');\n\t\t\n\t\tif( this.tfoot.isEmpty() )\n\t\t\tthis.tfoot.addRow('foot', items);\n\t\telse \n\t\t\tthis.tfoot.replaceRow('foot', 'foot', items);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tshowFooter: function() {\n\t\tthis.tfoot.show();\n\t\treturn this;\n\t},\n\t\n\thideFooter: function() {\n\t\tthis.tfoot.hide();\n\t\treturn this;\n\t},\n\t\n\taddRow: function( name, items ) {\n\t\tif( !this.hasElement(this.tbody) ) \n\t\t\tthis.addElement(this.tbody, 'bottom');\n\t\t\n\t\tvar row = this.tbody.addRow(name, this.map(items, name));\n\t\tif( $type(this.select_callback) == 'function' ) {\n\t\t\trow.addEvent('click', this.select_callback.pass(key) );\n\t\t}\n\t\tthis.striped();\n\t\treturn this;\n\t},\n\t\n\taddRows: function( items ) {\n\t\tif( !this.hasElement(this.tbody) ) \n\t\t\tthis.addElement(this.tbody, 'bottom');\n\t\n\t\tif( $type(items) == 'object' ) items = $H(items);\n\t\t\n\t\tvar rows = this.tbody.addRows( items.map(this.map, this) );\n\t\t\n\t\tif( $type(this.select_callback) == 'function' ) {\n\t\t\tselect_callback = this.select_callback;\n\t\t\t$each(rows, function(row, key) {\n\t\t\t\trow.addEvent('click', select_callback.pass(items[key]));\n\t\t\t});\n\t\t}\n\t\tthis.striped();\n\t\treturn this;\n\t},\n\t\n\tremoveRow: function( name ) {\n\t\tthis.tbody.removeRow(name);\n\t\tthis.striped();\n\t\t\n\t\tif( this.tbody.isEmpty() )\n\t\t\tthis.removeElement(this.tbody);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tremoveRows: function( names ) {\n\t\tif( $type(names) == 'object' ) names = $H(names).getKeys();\n\t\t\n\t\tthis.tbody.removeRows(names);\n\t\tthis.striped();\n\t\t\n\t\tif( this.tbody.isEmpty() )\n\t\t\tthis.removeElement(this.tbody);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tclearRows: function() {\n\t\tif( this.hasElement(this.tbody) ) \n\t\t\tthis.removeElement(this.tbody);\n\t\t\n\t\tthis.tbody.clearRows();\n\t\t\n\t\treturn this;\n\t},\n\t\n\treplaceRow: function( oldName, newName, items ) {\n\t\tthis.tbody.replaceRow(oldName, newName, this.map(items, newName));\n\t\tthis.striped();\n\t\treturn this;\n\t},\n\t\n\treplaceRows: function( items ) {\n\t\tthis.clearRows();\n\t\tthis.addRows(items);\n\t\treturn this;\n\t},\n\t\n\tsetFilter: function( filters ) {\n\t\tthis.removeFilter();\n\t\tthis.filters.combine(filters);\n\t\treturn this;\n\t},\n\t\n\tremoveFilter: function() {\n\t\tthis.filters.empty();\n\t},\n\t\n\tregisterPrototype: function( name, prototype ) {\n\t\tthis.prototypes.set(name, prototype);\n\t\treturn this;\n\t},\n\t\n\tunregisterPrototype: function( name, prototype ) {\n\t\tthis.prototypes.erase(name);\n\t\treturn this;\n\t},\n\t\n\tsource: function( source, inquiry, loaders ) {\n\t\tnew Webics.Request( source, inquiry, loaders, [this.addRows] );\n\t\treturn this;\n\t},\n\t\n\tselectable: function( callback ) {\n\t\tthis.select_callback = callback;\n\t\treturn this;\n\t},\n\t\n\trefresh: function() {\n\t\tlog('refreshing');\n\t},\n\t\n\tmap: function( item, key ) {\n\t\tvar row = new Hash();\n\t\t\n\t\tif( $type(item) == 'array' ) {\n\t\t\treturn item;\n\t\t}\n\t\t\n\t\tif( this.filters ) {\n\t\t\tthis.filters.each( function(filter) {\n\t\t\t\trow.set( filter, new Text(item[filter.toUpperCase()]) );\n\t\t\t}, this);\n\t\t}\n\t\t\n\t\tif( this.prototypes ) {\n\t\t\tthis.prototypes.each( function(prototype, name) {\n\t\t\t\tvar args = new Array();\n\t\t\t\tif( prototype.args ) {\n\t\t\t\t\tprototype.args.each( function(arg) {\n\t\t\t\t\t\targs.extend( [item[arg.toUpperCase()]] );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\trow.set( name, prototype.func.run(args) );\t\n\t\t\t});\n\t\t}\n\t\treturn row.getValues();\n\t},\n\t\n\tstriped: function() {\n\t\tthis.tbody.striped();\n\t\treturn this;\n\t}\n});\n\n/**\n * TabulationSection Class\n */\nvar TabulationSection = new Class({\n\t\n\tExtends\t\t\t: Table.Section,\n\trows\t\t\t: null,\n\t\n\tinitialize: function( tag, options ) {\n\t\tthis.parent(tag, options);\n\t\tthis.setContext('Tabulation.Section');\n\t\tthis.rows = new ContextOrganizer(this);\n\t},\n\t\n\tgetItems: function( name ) {\n\t\treturn this.rows.getItems(name);\n\t},\n\t\n\tgetRow: function( name ) {\n\t\treturn this.rows.getLine(name);\n\t},\n\t\n\taddRow: function( name, item ) {\n\t\treturn this.rows.addLine(name, item);\n\t},\n\t\n\taddRows: function( items ) {\n\t\treturn this.rows.addLines(items);\n\t},\n\t\n\tremoveRow: function( name ) {\n\t\treturn this.rows.removeLine(name);\n\t},\n\t\n\tremoveRows: function( names ) {\n\t\treturn this.rows.removeLines(names);\n\t},\n\t\n\tclearRows: function() {\n\t\treturn this.rows.clearLines();\n\t},\n\t\n\treplaceRow: function( oldName, newName, item ) {\n\t\treturn this.rows.replaceLine(oldName, newName, item);\n\t},\n\t\n\treplaceRows: function( items ) {\n\t\treturn this.rows.replaceLines(items);\n\t},\n\t\n\thasRow: function( name ) {\n\t\treturn this.rows.hasLine(name);\n\t},\n\t\n\tstriped: function() {\n\t\tthis.findElements('tr:even').each( function(td) {\n\t\t\ttd.swapClass('odd', 'even');\n\t\t});\n\t\tthis.findElements('tr:odd').each( function(td) {\n\t\t\ttd.swapClass('even', 'odd');\n\t\t});\n\t\treturn this;\n\t},\n\t\n\tnewLine: function( key, items ) {\n\t\tvar row = new Table.Tr();\n\t\tvar cell = null;\n\t\t$each(items, function(item) {\n\t\t\titem = ['string', 'number'].contains($type(item)) ? new Text(item) : item;\n\t\t\tcell = new Table.Td();\n\t\t\tcell.addElement(item);\n\t\t\trow.addElement(cell);\n\t\t});\n\n\t\treturn row;\n\t}\n});\nTabulation.Section = TabulationSection;\n\n/**\n * TabulationThead Class\n */\nvar TabulationThead = new Class({\n\t\n\tExtends\t: Tabulation.Section,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('thead', options);\n\t\tthis.setContext('Tabulation.Thead');\n\t},\n\t\n\tnewLine: function( key, items ) {\n\t\tvar row = new Table.Tr();\n\t\tvar cell = null;\n\t\t$each(items, function(item) {\n\t\t\titem = ['string', 'number'].contains($type(item)) ? new Text(item) : item;\n\t\t\tcell = new Table.Th();\n\t\t\tcell.addElement(item);\n\t\t\trow.addElement(cell);\n\t\t});\n\t\treturn row;\n\t}\n});\nTabulation.Thead = TabulationThead;\n\n/**\n * TabulationTbody Class\n */\nvar TabulationTbody = new Class({\n\t\n\tExtends\t: Tabulation.Section,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('tbody', options);\n\t\tthis.setContext('Tabulation.Tbody');\n\t}\n});\nTabulation.Tbody = TabulationTbody;\n\n/**\n * TabulationTfoot Class\n */\nvar TabulationTfoot = new Class({\n\t\n\tExtends\t: Tabulation.Section,\n\t\n\t/**\n\t * Constructor\n\t */\n\tinitialize: function( options ) {\n\t\tthis.parent('tfoot', options);\n\t\tthis.setContext('Tabulation.Tfoot');\n\t}\n}); \nTabulation.Tfoot = TabulationTfoot;\n\n\n/*\n * Roster\n */\n\nvar Roster = new Class({\n\t\n\tExtends\t\t: Table,\n\tprototypes\t: null,\n\tnames\t\t: null,\n\ttbody\t\t: null,\n\tdispatch\t: new Dispatch(),\n\t\n\tinitialize: function( names, options ) {\n\t\tthis.parent(options);\n\t\tthis.setContext('Roster');\n\t\tthis.tbody = new Tabulation.Tbody();\n\t\tthis.names = names;\n\t\tthis.prototypes = new Hash();\n\t},\n\t\n\tsetHeader: function( items ) {\n\t\tif( !this.hasElement(this.tbody) )\n\t\t\tthis.addElement(this.tbody, 'bottom');\n\t\t\n\t\tvar headers = items.associate(this.names);\n\t\t\n\t\t$each(headers, function(header, name) {\n\t\t\tif( this.tbody.hasRow(name) ) \n\t\t\t\tthis.tbody.replaceRow(name, name, this.map(name, header));\n\t\t\telse\n\t\t\t\tthis.tbody.addRow(name, this.map(null, header));\n\t\t}, this);\n\t\treturn this;\n\t},\n\t\n\tshowHeader: function() {\n\t\tif( !this.hasElement(this.tbody) )\n\t\t\treturn; \n\t\t\n\t\t$each(this.names, function(name) { this.tbody.getRow(name).findElement('td').show(); }, this);\n\t\treturn this;\n\t},\n\t\n\thideHeader: function() {\n\t\tif( !this.hasElement(this.tbody) )\n\t\t\treturn; \n\t\t\n\t\t$each(this.names, function(name) { this.tbody.getRow(name).findElement('td').hide();}, this);\n\t\treturn this;\n\t},\n\t\n\tsetRow: function( name, items ) {\n\t\tif( !this.names.contains(name) )\n\t\t\tthis.names.extend([name]);\n\t\t\n\t\tif( !this.hasElement(this.tbody) ) \n\t\t\tthis.addElement(this.tbody, 'bottom');\n\n\t\tif( this.tbody.hasRow(name) ) \n\t\t\tthis.tbody.replaceRow(name, name, this.map(name, null, items));\n\t\telse \n\t\t\tthis.tbody.addRow(name, this.map(null, null, items));\n\t\t\n\t\treturn this;\n\t},\n\t\n\tsetRows: function( items ) {\n\t\tif( !(items instanceof Object) && !(items instanceof Hash) ) \n\t\t\tthrow TypeError(\"'items' must be an Object of Object instances\");\n\n\t\t$each(this.names, function(name) { this.setRow(name, items[name.toUpperCase()]); }, this);\n\t\treturn this;\n\t},\n\t\n\tremoveRow: function( name ) {\n\t\tthis.tbody.removeRow(name);\n\t\t\n\t\tif( this.tbody.isEmpty() )\n\t\t\tthis.removeElement(this.tbody);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tremoveRows: function( names ) {\n\t\tif( $type(names) == 'object' ) names = $H(names).getKeys();\n\t\t\n\t\tthis.tbody.removeRows(names);\n\t\t\n\t\tif( this.hasElement(this.tbody) && this.tbody.isEmpty() )\n\t\t\tthis.removeElement(this.tbody);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tclearRows: function( names ) {\n\t\tif( this.hasElement(this.tbody) ) \n\t\t\tthis.removeElement(this.tbody);\n\t\t\n\t\tthis.tbody.clearRows();\n\t\t\n\t\treturn this;\n\t},\n\t\n\tregisterPrototype: function( name, prototype ) {\n\t\tthis.prototypes.set(name, prototype);\n\t\treturn this;\n\t},\n\t\n\tunregisterPrototype: function( name, prototype ) {\n\t\tthis.prototypes.erase(name);\n\t\treturn this;\n\t},\n\t\n\tsource: function( source, inquiry, loaders ) {\n\t\tnew Webics.Request( source, inquiry, loaders, [this.setRows] );\n\t\treturn this;\n\t},\n\t\n\trefresh: function() {\n\t\tlog('refreshing');\n\t},\n\t\n\tmap: function( key, header, items ) {\n\t\t// if replacing an existing row\n\t\tif(key) {\n\t\t\tvar oldItems = this.tbody.getItems(key);\n\t\t\tif( !header ) header = oldItems[0];\n\t\t\tif( !items ) items = [];\n\t\t\tif( this.prototypes.has(key) ) {\n\t\t\t\titems = [this.prototypes.get(key).attempt(key)];\n\t\t\t}\n\t\t} \n\t\t// else new row\n\t\telse {\n\t\t\tif( !header ) header = '';\n\t\t\tif( !items ) items = [];\n\t\t}\n\t\treturn [header].extend($splat(items));\n\t}\n});\n\n\n/*\n * Planner\n */\n\nvar Planner = new Class({\n\t\n\tExtends\t\t: ComplexElementContext,\n\tprototypes\t: null,\n\tfilters\t\t: null,\n\tthead\t\t: null, \n\ttbody\t\t: null,\n\ttfoot\t\t: null,\n\tdispatch\t: new Dispatch(),\n\t\n\tinitialize: function( options ) {\n\t\tthis.parent('div', options);\n\t\tthis.setContext('Planner');\n\t\tthis.thead = new Planner.Section();\n\t\tthis.tbody = new Planner.Section();\n\t\tthis.tfoot = new Planner.Section();\n\t\tthis.prototypes = new Hash();\n\t\tthis.filters = new Array();\n\t},\n\t\n\tsetHeader: function( items ) {\n\t\tif( !this.hasElement(this.thead) )\n\t\t\tthis.addElement(this.thead, 'top');\n\t\t\n\t\tif( this.thead.isEmpty() ) \n\t\t\tthis.thead.addRow('head', items);\n\t\telse \n\t\t\tthis.thead.replaceRow('head', 'head', items);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tshowHeader: function() {\n\t\tthis.thead.show();\n\t\treturn this;\n\t},\n\t\n\thideHeader: function() {\n\t\tthis.thead.hide();\n\t\treturn this;\n\t},\n\t\n\tsetFooter: function( items ) {\n\t\tif( !this.hasElement(this.tfoot) ) \n\t\t\tthis.addElement(this.tfoot, 'top');\n\t\t\n\t\tif( this.tfoot.isEmpty() )\n\t\t\tthis.tfoot.addRow('foot', items);\n\t\telse \n\t\t\tthis.tfoot.replaceRow('foot', 'foot', items);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tshowFooter: function() {\n\t\tthis.tfoot.show();\n\t\treturn this;\n\t},\n\t\n\thideFooter: function() {\n\t\tthis.tfoot.hide();\n\t\treturn this;\n\t},\n\t\n\taddRow: function( name, items ) {\n\t\tif( !this.hasElement(this.tbody) ) \n\t\t\tthis.addElement(this.tbody, 'bottom');\n\t\t\n\t\tthis.tbody.addRow(name, this.map(items, name));\n\t\tthis.striped();\n\t\treturn this;\n\t},\n\t\n\taddRows: function( items ) {\n\t\tif( !this.hasElement(this.tbody) ) \n\t\t\tthis.addElement(this.tbody, 'bottom');\n\t\n\t\tif( $type(items) == 'object' ) items = $H(items);\n\t\t\n\t\tthis.tbody.addRows( items.map(this.map, this) );\n\t\tthis.striped();\n\t\treturn this;\n\t},\n\t\n\tremoveRow: function( name ) {\n\t\tthis.tbody.removeRow(name);\n\t\tthis.striped();\n\t\t\n\t\tif( this.tbody.isEmpty() )\n\t\t\tthis.removeElement(this.tbody);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tremoveRows: function( names ) {\n\t\tif( $type(names) == 'object' ) names = $H(names).getKeys();\n\t\t\n\t\tthis.tbody.removeRows(names);\n\t\tthis.striped();\n\t\t\n\t\tif( this.tbody.isEmpty() )\n\t\t\tthis.removeElement(this.tbody);\n\t\t\n\t\treturn this;\n\t},\n\t\n\tclearRows: function() {\n\t\tif( this.hasElement(this.tbody) ) \n\t\t\tthis.removeElement(this.tbody);\n\t\t\n\t\tthis.tbody.clearRows();\n\t\t\n\t\treturn this;\n\t},\n\t\n\treplaceRow: function( oldName, newName, items ) {\n\t\tthis.tbody.replaceRow(oldName, newName, this.map(items, newName));\n\t\tthis.striped();\n\t\treturn this;\n\t},\n\t\n\treplaceRows: function( items ) {\n\t\tthis.clearRows();\n\t\tthis.addRows(items);\n\t\treturn this;\n\t},\n\t\n\tsetFilter: function( filters ) {\n\t\tthis.removeFilter();\n\t\tthis.filters.combine(filters);\n\t\treturn this;\n\t},\n\t\n\tremoveFilter: function() {\n\t\tthis.filters.empty();\n\t},\n\t\n\tregisterPrototype: function( name, prototype ) {\n\t\tthis.prototypes.set(name, prototype);\n\t\treturn this;\n\t},\n\t\n\tunregisterPrototype: function( name, prototype ) {\n\t\tthis.prototypes.erase(name);\n\t\treturn this;\n\t},\n\t\n\tsource: function( source, inquiry, loaders ) {\n\t\tnew Webics.Request( source, inquiry, loaders, [this.addRows] );\n\t\treturn this;\n\t},\n\t\n\trefresh: function() {\n\t\tlog('refreshing');\n\t},\n\t\n\tmap: function( item, key ) {\n\t\tvar row = new Hash();\n\t\t\n\t\tif( $type(item) == 'array' ) {\n\t\t\treturn item;\n\t\t}\n\t\t\n\t\tif( this.filters ) {\n\t\t\tthis.filters.each( function(filter) {\n\t\t\t\trow.set( filter, new Text(item[filter.toUpperCase()]) );\n\t\t\t}, this);\n\t\t}\n\t\t\n\t\tif( this.prototypes ) {\n\t\t\tthis.prototypes.each( function(prototype, name) {\n\t\t\t\tvar args = new Array();\n\t\t\t\tif( prototype.args ) {\n\t\t\t\t\tprototype.args.each( function(arg) {\n\t\t\t\t\t\targs.extend( [item[arg.toUpperCase()]] );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\trow.set( name, prototype.func.run(args) );\t\n\t\t\t});\n\t\t}\n\t\treturn row.getValues();\n\t},\n\t\n\tstriped: function() {\n\t\tthis.tbody.striped();\n\t}\n});\n\n/**\n * PlannerSection Class\n */\nvar PlannerSection = new Class({\n\t\n\tExtends\t: Container,\n\trows\t: null,\n\t\n\tinitialize: function( options ) {\n\t\tthis.parent(options);\n\t\tthis.setContext('Planner.Section');\n\t\tthis.rows = new ContextOrganizer(this);\n\t},\n\t\n\tgetItems: function( name ) {\n\t\treturn this.rows.getItems(name);\n\t},\n\t\n\tgetRow: function( name ) {\n\t\treturn this.rows.getLine(name);\n\t},\n\t\n\taddRow: function( name, item ) {\n\t\treturn this.rows.addLine(name, item);\n\t},\n\t\n\taddRows: function( items ) {\n\t\treturn this.rows.addLines(items);\n\t},\n\t\n\tremoveRow: function( name ) {\n\t\treturn this.rows.removeLine(name);\n\t},\n\t\n\tremoveRows: function( names ) {\n\t\treturn this.rows.removeLines(names);\n\t},\n\t\n\tclearRows: function() {\n\t\treturn this.rows.clearLines();\n\t},\n\t\n\treplaceRow: function( oldName, newName, item ) {\n\t\treturn this.rows.replaceLine(oldName, newName, item);\n\t},\n\t\n\treplaceRows: function( items ) {\n\t\treturn this.rows.replaceLines(items);\n\t},\n\t\n\thasRow: function( name ) {\n\t\treturn this.rows.hasLine(name);\n\t},\n\t\n\tstriped: function() {\n\t\tthis.findElements('div[context=Container]:even').each( function(td) {\n\t\t\ttd.swapClass('odd', 'even');\n\t\t});\n\t\tthis.findElements('div[context=Container]:odd').each( function(td) {\n\t\t\ttd.swapClass('even', 'odd');\n\t\t});\n\t},\n\t\n\tnewLine: function( key, items ) {\n\t\tvar row = new Container();\n\t\tvar cell = null;\n\t\t$each(items, function(item) {\n\t\t\titem = ['string', 'number'].contains($type(item)) ? new Text(item) : item;\n\t\t\tcell = new Div();\n\t\t\tcell.addElement(item);\n\t\t\trow.addElement(cell);\n\t\t});\n\t\treturn row;\n\t}\n});\nPlanner.Section = PlannerSection;\n\n/*\n * Organizers\n */\n\n/**\n * ContextOrganizer Class\n */\nvar ContextOrganizer = new Class({\n\t\n\tExtends\t: Organizer,\n\tcontext\t: null,\n\titems\t: null,\n\telements: null,\n\t\n\tinitialize: function( context, options ) {\n\t\tthis.context = context;\n\t\tthis.items = new Hash();\n\t\tthis.elements = new Hash();\n\t},\n\t\n\ttoElement: function() {\n\t\treturn this.context.toElement();\n\t},\n\t\n\t/**\n\t * Get Items\n\t */\n\tgetItems: function( key ) {\n\t\tif( !['string', 'number'].contains($type(key)) )\n\t\t\tthrow TypeError(\"'key' must be a string\");\n\t\tif( !this.items.has(key) )\n\t\t\tthrow ReferenceError(\"key doesn't exist\");\n\t\t\n\t\treturn this.items.get(key);\n\t},\n\t\n\t/**\n\t * Get Line\n\t */\n\tgetLine: function( key ) {\n\t\tif( !['string', 'number'].contains($type(key)) )\n\t\t\tthrow TypeError(\"'key' must be a string\");\n\t\tif( !this.elements.has(key) )\n\t\t\tthrow ReferenceError(\"key doesn't exist\");\n\t\t\n\t\treturn this.elements.get(key);\n\t},\n\t\n\t/**\n\t * Add Lines\n\t */\n\taddLine: function( key, item ) {\n\t\tif( !['string', 'number'].contains($type(key)) )\n\t\t\tthrow TypeError(\"'key' must be a string\");\n\t\tif( this.elements.has(key) )\n\t\t\tthrow ReferenceError(\"key is already in use\");\n\t\t\n\t\tvar element = this.newLine(key, item); \n\t\tthis.context.addElement(element);\n\t\tthis.elements.set(key, element);\n\t\tthis.items.set(key, item);\n\t\treturn element;\n\t},\n\t\n\taddLines: function( items ) {\n\t\tif( !(items instanceof Object) && !(items instanceof Hash) ) \n\t\t\tthrow TypeError(\"'items' must be an Object of Object instances\");\n\t\tvar lines = new Hash();\n\t\t$each(items, function(item, key) { \n\t\t\tlines.set(key, this.addLine(key, item));\n\t\t}, this);\n\t\treturn lines;\n\t},\n\t\n\t/**\n\t * Remove Lines\n\t */\n\tremoveLine: function( key ) {\n\t\tif( !['string', 'number'].contains($type(key)) )\n\t\t\tthrow TypeError(\"'key' must be a string\");\n\t\tif( !this.elements.has(key) )\n\t\t\tthrow ReferenceError(\"key doesn't exist\");\n\t\t\n\t\tvar element = this.getLine(key);\n\t\tthis.context.removeElement(element);\n\t\tthis.elements.erase(key);\n\t\tthis.items.erase(key);\n\t\treturn this.context;\n\t},\n\t\n\tremoveLines: function( keys ) {\n\t\tif( !(keys instanceof Array) ) \n\t\t\tthrow TypeError(\"'keys' must be an Array of strings\");\n\t\t\n\t\t$each(keys, function(key) { this.removeLine(key); }, this);\n\t\treturn this.context;\n\t},\n\t\n\t/**\n\t * Clear Lines\n\t */\n\tclearLines: function() {\n\t\tthis.context.disposeElements();\n\t\tthis.elements.empty();\n\t\tthis.items.empty();\n\t\treturn this.context;\n\t},\n\t\n\t/**\n\t * Replace Line\n\t */\n\treplaceLine: function( oldKey, newKey, item ) {\n\t\tif( !['string', 'number'].contains($type(oldKey)) )\n\t\t\tthrow TypeError(\"'oldKey' must be a string\");\n\t\tif( !['string', 'number'].contains($type(newKey)) )\n\t\t\tthrow TypeError(\"'newKey' must be a string\");\n\t\tif( !this.elements.has(oldKey) )\n\t\t\tthrow ReferenceError(\"oldKey doesn't exist\");\n\t\t\n\t\tvar oldElement = this.getLine(oldKey);\n\t\tvar newElement = this.newLine(newKey, item);\n\t\tthis.context.replaceElement(oldElement, newElement);\n\t\tthis.elements.erase(oldKey);\n\t\tthis.elements.set(newKey, newElement);\n\t\tthis.items.erase(oldKey);\n\t\tthis.items.set(newKey, item);\n\t\treturn this.context;\n\t},\n\t\n\treplaceLines: function( items ) {\n\t\tthis.clearLines();\n\t\tthis.addLines(items);\n\t\treturn this.context;\n\t},\n\t\n\thasLine: function( key ) {\n\t\treturn this.elements.has(key);\n\t},\n\t\n\tnewLine: function(key, item) {\n\t\treturn this.context.newLine(key, item);\n\t}\n});\n\nvar OrganizerTabulation = new Class({\n\t\n\tExtends\t: Organizer,\n\ttabulation: null,\n\t\n\tinitialize: function(options) {\n\t\tthis.tabulation = new Tabulation(options);\n\t},\n\t\n\ttoElement: function() {\n\t\treturn this.tabulation.toElement();\n\t},\n\t\n\taddLine: function( key, items ) {\n\t\tthis.tabulation.addRow(key, items);\n\t\treturn this;\n\t},\n\t\n\tremoveLine: function( key ) {\n\t\tthis.tabulation.removeRow(key);\n\t\treturn this;\n\t},\n\t\n\tclearLines: function() {\n\t\tthis.tabulation.clearRows();\n\t\treturn this;\n\t},\n\t\n\treplaceLine: function( oldKey, newKey, items ) {\n\t\tthis.tabulation.replaceRow(oldKey, newKey, items);\n\t\treturn this;\n\t}\n});\nOrganizer.Tabulation = OrganizerTabulation;\n\nvar OrganizerPlanner = new Class({\n\t\n\tExtends\t: Organizer,\n\tplanner\t: null,\n\t\n\tinitialize: function(options) {\n\t\tthis.planner = new Planner(options);\n\t},\n\t\n\ttoElement: function() {\n\t\treturn this.planner.toElement();\n\t},\n\t\n\taddLine: function( key, items ) {\n\t\tthis.planner.addRow(key, items);\n\t\treturn this;\n\t},\n\t\n\tremoveLine: function( key ) {\n\t\tthis.planner.removeRow(key);\n\t\treturn this;\n\t},\n\t\n\tclearLines: function() {\n\t\tthis.planner.clearRows();\n\t\treturn this;\n\t},\n\t\n\treplaceLine: function( oldKey, newKey, items ) {\n\t\tthis.planner.replaceRow(oldKey, newKey, items);\n\t\treturn this;\n\t}\n});\nOrganizer.Planner = OrganizerPlanner;\n\n\n/*\n * Dispatch\n */\n\nvar InputDispatch = new Class({\n\t\n\tSingleton\t: true,\n\tdispatch\t: new Dispatch(),\n\tservices\t: new Hash(),\n\troot\t\t: '-InputChange',\n\t\n\tnotify: function( serviceInput ) {\n\t\tif( (!serviceInput instanceof Form.SimpleInput) && !(serviceInput instanceof Form.CompositeInput) )\n\t\t\tthrow TypeError(\"'input' must be an instance of Form.SimpleInputor or Form.CompositeInput\");\n\n\t\tthis.dispatch.notify(serviceInput.unique+this.root, serviceInput.value);\n\t\treturn this;\n\t},\n\t\n\tsubscribe: function( serviceInput, observer ) {\n\t\tif( !(serviceInput instanceof Form.SimpleInput) && !(serviceInput instanceof Form.CompositeInput) )\n\t\t\tthrow TypeError(\"'serviceInput' must be an instance of Form.SimpleInputor or Form.CompositeInput\");\n\t\tif( !this.services.has(serviceInput.unique+this.root) ) {\n\t\t\tserviceInput.addEvent('change', function() {\n\t\t\t\tthis.notify(serviceInput);\n\t\t\t}.bind(this));\n\t\t\tthis.services.set(serviceInput.unique+this.root, serviceInput);\n\t\t}\n\t\t\n\t\tthis.dispatch.subscribe(serviceInput.unique+this.root, observer);\n\t\treturn this;\n\t}\n});\n\nvar DynamicEnumeration = new Class({\n\n\tExtends\t\t: ComplexElementContext,\n\tcurrent\t\t: null,\n\tfollowers\t: null,\n\tkey\t\t\t: null,\n\t\n\tinitialize: function( key, options ) {\n\t\tthis.parent('div', options);\n\t\tthis.setContext('DynamicEnumaration');\n\t\tthis.followers = new Hash();\n\t\tthis.key = key;\n\t},\n\t\n\tupdateFollowers: function( leader ) {\n\t\tvar oldFollower = this.current;\n\t\tvar newFollower = this.followers.get(leader);\n\n\t\tif( !newFollower ) {\n\t\t\tthis.removeElement(oldFollower);\n\t\t}\n\t\telse if( !this.hasElement(oldFollower) ) {\n\t\t\tthis.addElement(newFollower);\n\t\t} else {\n\t\t\tthis.replaceElement(oldFollower, newFollower);\n\t\t} \n\t\t\n\t\tthis.current = newFollower;\n\t\treturn this;\n\t},\n\t\n\tregisterFollower: function( leader, follower ) {\n\t\tif( !(follower instanceof ElementContext) )\n\t\t\tthrow TypeError(\"'follower' must be an instance of ElementContext\");\n\t\t\n\t\tthis.followers.set(leader, follower);\n\t\treturn this;\n\t},\n\t\n\tsource: function( source, inquiry, loaders ) {\n\t\tcallback = function(data) {\n\t\t\tvar leader = $H(data).getValues()[0][this.key.toUpperCase()];\n\t\t\tthis.updateFollowers(leader);\n\t\t}.bind(this);\n\t\t\n\t\tnew Webics.Request( source, inquiry, loaders, [callback] );\n\t\treturn this;\n\t}\n\t\n});\n\nvar Refresher = new Class({\n\n\tExtends\t\t: ComplexElementContext,\n\tcurrent\t\t: null,\n\tfollowers\t: null,\n\tkey\t\t\t: null,\n\t\n\tinitialize: function( options ) {\n\t\tthis.parent('div', options);\n\t\tthis.setContext('Refresher');\n\t},\n\t\n\trefresh: function() {\n\t\tthis.elements.each( function(element) {\n\t\t\tlog(element);\n\t\t\t//element.refresh();\n\t\t});\n\t}\n});\n\nElement.Events.controlclick = {\n\tbase: 'click', //we set a base type\n\tcondition: function(event){ //and a function to perform additional checks.\n\t    return (event.control == true); //this means the event is free to fire\n\t}\n};"]],"start1":0,"start2":0,"length1":0,"length2":88610}]],"length":88610}
